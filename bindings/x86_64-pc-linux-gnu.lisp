;; Generated by :claw at 2022-03-14T16:34:17.531981Z
(uiop:define-package :%sqlite3 (:use))
(uiop:define-package :hickory-sqlite-bindings~pristine (:use :cl))
(common-lisp:in-package :hickory-sqlite-bindings~pristine)

(defparameter %sqlite3::+sqlite3-text+ 3)

(defparameter %sqlite3::+abort+ 4)

(defparameter %sqlite3::+abort-rollback+ 516)

(defparameter %sqlite3::+access-exists+ 0)

(defparameter %sqlite3::+access-read+ 2)

(defparameter %sqlite3::+access-readwrite+ 1)

(defparameter %sqlite3::+alter-table+ 26)

(defparameter %sqlite3::+analyze+ 28)

(defparameter %sqlite3::+any+ 5)

(defparameter %sqlite3::+attach+ 24)

(defparameter %sqlite3::+auth+ 23)

(defparameter %sqlite3::+auth-user+ 279)

(defparameter %sqlite3::+blob+ 4)

(defparameter %sqlite3::+busy+ 5)

(defparameter %sqlite3::+busy-recovery+ 261)

(defparameter %sqlite3::+busy-snapshot+ 517)

(defparameter %sqlite3::+busy-timeout+ 773)

(defparameter %sqlite3::+cantopen+ 14)

(defparameter %sqlite3::+cantopen-convpath+ 1038)

(defparameter %sqlite3::+cantopen-dirtywal+ 1294)

(defparameter %sqlite3::+cantopen-fullpath+ 782)

(defparameter %sqlite3::+cantopen-isdir+ 526)

(defparameter %sqlite3::+cantopen-notempdir+ 270)

(defparameter %sqlite3::+cantopen-symlink+ 1550)

(defparameter %sqlite3::+checkpoint-full+ 1)

(defparameter %sqlite3::+checkpoint-passive+ 0)

(defparameter %sqlite3::+checkpoint-restart+ 2)

(defparameter %sqlite3::+checkpoint-truncate+ 3)

(defparameter %sqlite3::+config-covering-index-scan+ 20)

(defparameter %sqlite3::+config-getmalloc+ 5)

(defparameter %sqlite3::+config-getmutex+ 11)

(defparameter %sqlite3::+config-getpcache+ 15)

(defparameter %sqlite3::+config-getpcache2+ 19)

(defparameter %sqlite3::+config-heap+ 8)

(defparameter %sqlite3::+config-log+ 16)

(defparameter %sqlite3::+config-lookaside+ 13)

(defparameter %sqlite3::+config-malloc+ 4)

(defparameter %sqlite3::+config-memdb-maxsize+ 29)

(defparameter %sqlite3::+config-memstatus+ 9)

(defparameter %sqlite3::+config-mmap-size+ 22)

(defparameter %sqlite3::+config-multithread+ 2)

(defparameter %sqlite3::+config-mutex+ 10)

(defparameter %sqlite3::+config-pagecache+ 7)

(defparameter %sqlite3::+config-pcache+ 14)

(defparameter %sqlite3::+config-pcache2+ 18)

(defparameter %sqlite3::+config-pcache-hdrsz+ 24)

(defparameter %sqlite3::+config-pmasz+ 25)

(defparameter %sqlite3::+config-scratch+ 6)

(defparameter %sqlite3::+config-serialized+ 3)

(defparameter %sqlite3::+config-singlethread+ 1)

(defparameter %sqlite3::+config-small-malloc+ 27)

(defparameter %sqlite3::+config-sorterref-size+ 28)

(defparameter %sqlite3::+config-sqllog+ 21)

(defparameter %sqlite3::+config-stmtjrnl-spill+ 26)

(defparameter %sqlite3::+config-uri+ 17)

(defparameter %sqlite3::+config-win32-heapsize+ 23)

(defparameter %sqlite3::+constraint+ 19)

(defparameter %sqlite3::+constraint-check+ 275)

(defparameter %sqlite3::+constraint-commithook+ 531)

(defparameter %sqlite3::+constraint-datatype+ 3091)

(defparameter %sqlite3::+constraint-foreignkey+ 787)

(defparameter %sqlite3::+constraint-function+ 1043)

(defparameter %sqlite3::+constraint-notnull+ 1299)

(defparameter %sqlite3::+constraint-pinned+ 2835)

(defparameter %sqlite3::+constraint-primarykey+ 1555)

(defparameter %sqlite3::+constraint-rowid+ 2579)

(defparameter %sqlite3::+constraint-trigger+ 1811)

(defparameter %sqlite3::+constraint-unique+ 2067)

(defparameter %sqlite3::+constraint-vtab+ 2323)

(defparameter %sqlite3::+copy+ 0)

(defparameter %sqlite3::+corrupt+ 11)

(defparameter %sqlite3::+corrupt-index+ 779)

(defparameter %sqlite3::+corrupt-sequence+ 523)

(defparameter %sqlite3::+corrupt-vtab+ 267)

(defparameter %sqlite3::+create-index+ 1)

(defparameter %sqlite3::+create-table+ 2)

(defparameter %sqlite3::+create-temp-index+ 3)

(defparameter %sqlite3::+create-temp-table+ 4)

(defparameter %sqlite3::+create-temp-trigger+ 5)

(defparameter %sqlite3::+create-temp-view+ 6)

(defparameter %sqlite3::+create-trigger+ 7)

(defparameter %sqlite3::+create-view+ 8)

(defparameter %sqlite3::+create-vtable+ 29)

(defparameter %sqlite3::+dbconfig-defensive+ 1010)

(defparameter %sqlite3::+dbconfig-dqs-ddl+ 1014)

(defparameter %sqlite3::+dbconfig-dqs-dml+ 1013)

(defparameter %sqlite3::+dbconfig-enable-fkey+ 1002)

(defparameter %sqlite3::+dbconfig-enable-fts3-tokenizer+ 1004)

(defparameter %sqlite3::+dbconfig-enable-load-extension+ 1005)

(defparameter %sqlite3::+dbconfig-enable-qpsg+ 1007)

(defparameter %sqlite3::+dbconfig-enable-trigger+ 1003)

(defparameter %sqlite3::+dbconfig-enable-view+ 1015)

(defparameter %sqlite3::+dbconfig-legacy-alter-table+ 1012)

(defparameter %sqlite3::+dbconfig-legacy-file-format+ 1016)

(defparameter %sqlite3::+dbconfig-lookaside+ 1001)

(defparameter %sqlite3::+dbconfig-maindbname+ 1000)

(defparameter %sqlite3::+dbconfig-max+ 1017)

(defparameter %sqlite3::+dbconfig-no-ckpt-on-close+ 1006)

(defparameter %sqlite3::+dbconfig-reset-database+ 1009)

(defparameter %sqlite3::+dbconfig-trigger-eqp+ 1008)

(defparameter %sqlite3::+dbconfig-trusted-schema+ 1017)

(defparameter %sqlite3::+dbconfig-writable-schema+ 1011)

(defparameter %sqlite3::+dbstatus-cache-hit+ 7)

(defparameter %sqlite3::+dbstatus-cache-miss+ 8)

(defparameter %sqlite3::+dbstatus-cache-spill+ 12)

(defparameter %sqlite3::+dbstatus-cache-used+ 1)

(defparameter %sqlite3::+dbstatus-cache-used-shared+ 11)

(defparameter %sqlite3::+dbstatus-cache-write+ 9)

(defparameter %sqlite3::+dbstatus-deferred-fks+ 10)

(defparameter %sqlite3::+dbstatus-lookaside-hit+ 4)

(defparameter %sqlite3::+dbstatus-lookaside-miss-full+ 6)

(defparameter %sqlite3::+dbstatus-lookaside-miss-size+ 5)

(defparameter %sqlite3::+dbstatus-lookaside-used+ 0)

(defparameter %sqlite3::+dbstatus-max+ 12)

(defparameter %sqlite3::+dbstatus-schema-used+ 2)

(defparameter %sqlite3::+dbstatus-stmt-used+ 3)

(defparameter %sqlite3::+delete+ 9)

(defparameter %sqlite3::+deny+ 1)

(defparameter %sqlite3::+deserialize-freeonclose+ 1)

(defparameter %sqlite3::+deserialize-readonly+ 4)

(defparameter %sqlite3::+deserialize-resizeable+ 2)

(defparameter %sqlite3::+detach+ 25)

(defparameter %sqlite3::+deterministic+ 2048)

(defparameter %sqlite3::+directonly+ 524288)

(defparameter %sqlite3::+done+ 101)

(defparameter %sqlite3::+drop-index+ 10)

(defparameter %sqlite3::+drop-table+ 11)

(defparameter %sqlite3::+drop-temp-index+ 12)

(defparameter %sqlite3::+drop-temp-table+ 13)

(defparameter %sqlite3::+drop-temp-trigger+ 14)

(defparameter %sqlite3::+drop-temp-view+ 15)

(defparameter %sqlite3::+drop-trigger+ 16)

(defparameter %sqlite3::+drop-view+ 17)

(defparameter %sqlite3::+drop-vtable+ 30)

(defparameter %sqlite3::+empty+ 16)

(defparameter %sqlite3::+error+ 1)

(defparameter %sqlite3::+error-missing-collseq+ 257)

(defparameter %sqlite3::+error-retry+ 513)

(defparameter %sqlite3::+error-snapshot+ 769)

(defparameter %sqlite3::+fail+ 3)

(defparameter %sqlite3::+fcntl-begin-atomic-write+ 31)

(defparameter %sqlite3::+fcntl-busyhandler+ 15)

(defparameter %sqlite3::+fcntl-chunk-size+ 6)

(defparameter %sqlite3::+fcntl-ckpt-done+ 37)

(defparameter %sqlite3::+fcntl-ckpt-start+ 39)

(defparameter %sqlite3::+fcntl-cksm-file+ 41)

(defparameter %sqlite3::+fcntl-commit-atomic-write+ 32)

(defparameter %sqlite3::+fcntl-commit-phasetwo+ 22)

(defparameter %sqlite3::+fcntl-data-version+ 35)

(defparameter %sqlite3::+fcntl-external-reader+ 40)

(defparameter %sqlite3::+fcntl-file-pointer+ 7)

(defparameter %sqlite3::+fcntl-get-lockproxyfile+ 2)

(defparameter %sqlite3::+fcntl-has-moved+ 20)

(defparameter %sqlite3::+fcntl-journal-pointer+ 28)

(defparameter %sqlite3::+fcntl-last-errno+ 4)

(defparameter %sqlite3::+fcntl-lockstate+ 1)

(defparameter %sqlite3::+fcntl-lock-timeout+ 34)

(defparameter %sqlite3::+fcntl-mmap-size+ 18)

(defparameter %sqlite3::+fcntl-overwrite+ 11)

(defparameter %sqlite3::+fcntl-pdb+ 30)

(defparameter %sqlite3::+fcntl-persist-wal+ 10)

(defparameter %sqlite3::+fcntl-powersafe-overwrite+ 13)

(defparameter %sqlite3::+fcntl-pragma+ 14)

(defparameter %sqlite3::+fcntl-rbu+ 26)

(defparameter %sqlite3::+fcntl-reserve-bytes+ 38)

(defparameter %sqlite3::+fcntl-rollback-atomic-write+ 33)

(defparameter %sqlite3::+fcntl-set-lockproxyfile+ 3)

(defparameter %sqlite3::+fcntl-size-hint+ 5)

(defparameter %sqlite3::+fcntl-size-limit+ 36)

(defparameter %sqlite3::+fcntl-sync+ 21)

(defparameter %sqlite3::+fcntl-sync-omitted+ 8)

(defparameter %sqlite3::+fcntl-tempfilename+ 16)

(defparameter %sqlite3::+fcntl-trace+ 19)

(defparameter %sqlite3::+fcntl-vfsname+ 12)

(defparameter %sqlite3::+fcntl-vfs-pointer+ 27)

(defparameter %sqlite3::+fcntl-wal-block+ 24)

(defparameter %sqlite3::+fcntl-win32-av-retry+ 9)

(defparameter %sqlite3::+fcntl-win32-get-handle+ 29)

(defparameter %sqlite3::+fcntl-win32-set-handle+ 23)

(defparameter %sqlite3::+fcntl-zipvfs+ 25)

(defparameter %sqlite3::+float+ 2)

(defparameter %sqlite3::+format+ 24)

(defparameter %sqlite3::+full+ 13)

(defparameter %sqlite3::+function+ 31)

(defparameter %sqlite3::+get-lockproxyfile+ 2)

(defparameter %sqlite3::+ignore+ 2)

(defparameter %sqlite3::+index-constraint-eq+ 2)

(defparameter %sqlite3::+index-constraint-function+ 150)

(defparameter %sqlite3::+index-constraint-ge+ 32)

(defparameter %sqlite3::+index-constraint-glob+ 66)

(defparameter %sqlite3::+index-constraint-gt+ 4)

(defparameter %sqlite3::+index-constraint-is+ 72)

(defparameter %sqlite3::+index-constraint-isnot+ 69)

(defparameter %sqlite3::+index-constraint-isnotnull+ 70)

(defparameter %sqlite3::+index-constraint-isnull+ 71)

(defparameter %sqlite3::+index-constraint-le+ 8)

(defparameter %sqlite3::+index-constraint-like+ 65)

(defparameter %sqlite3::+index-constraint-limit+ 73)

(defparameter %sqlite3::+index-constraint-lt+ 16)

(defparameter %sqlite3::+index-constraint-match+ 64)

(defparameter %sqlite3::+index-constraint-ne+ 68)

(defparameter %sqlite3::+index-constraint-offset+ 74)

(defparameter %sqlite3::+index-constraint-regexp+ 67)

(defparameter %sqlite3::+index-scan-unique+ 1)

(defparameter %sqlite3::+innocuous+ 2097152)

(defparameter %sqlite3::+insert+ 18)

(defparameter %sqlite3::+integer+ 1)

(defparameter %sqlite3::+internal+ 2)

(defparameter %sqlite3::+interrupt+ 9)

(defparameter %sqlite3::+iocap-atomic+ 1)

(defparameter %sqlite3::+iocap-atomic16k+ 64)

(defparameter %sqlite3::+iocap-atomic1k+ 4)

(defparameter %sqlite3::+iocap-atomic2k+ 8)

(defparameter %sqlite3::+iocap-atomic32k+ 128)

(defparameter %sqlite3::+iocap-atomic4k+ 16)

(defparameter %sqlite3::+iocap-atomic512+ 2)

(defparameter %sqlite3::+iocap-atomic64k+ 256)

(defparameter %sqlite3::+iocap-atomic8k+ 32)

(defparameter %sqlite3::+iocap-batch-atomic+ 16384)

(defparameter %sqlite3::+iocap-immutable+ 8192)

(defparameter %sqlite3::+iocap-powersafe-overwrite+ 4096)

(defparameter %sqlite3::+iocap-safe-append+ 512)

(defparameter %sqlite3::+iocap-sequential+ 1024)

(defparameter %sqlite3::+iocap-undeletable-when-open+ 2048)

(defparameter %sqlite3::+ioerr+ 10)

(defparameter %sqlite3::+ioerr-access+ 3338)

(defparameter %sqlite3::+ioerr-auth+ 7178)

(defparameter %sqlite3::+ioerr-begin-atomic+ 7434)

(defparameter %sqlite3::+ioerr-blocked+ 2826)

(defparameter %sqlite3::+ioerr-checkreservedlock+ 3594)

(defparameter %sqlite3::+ioerr-close+ 4106)

(defparameter %sqlite3::+ioerr-commit-atomic+ 7690)

(defparameter %sqlite3::+ioerr-convpath+ 6666)

(defparameter %sqlite3::+ioerr-corruptfs+ 8458)

(defparameter %sqlite3::+ioerr-data+ 8202)

(defparameter %sqlite3::+ioerr-delete+ 2570)

(defparameter %sqlite3::+ioerr-delete-noent+ 5898)

(defparameter %sqlite3::+ioerr-dir-close+ 4362)

(defparameter %sqlite3::+ioerr-dir-fsync+ 1290)

(defparameter %sqlite3::+ioerr-fstat+ 1802)

(defparameter %sqlite3::+ioerr-fsync+ 1034)

(defparameter %sqlite3::+ioerr-gettemppath+ 6410)

(defparameter %sqlite3::+ioerr-lock+ 3850)

(defparameter %sqlite3::+ioerr-mmap+ 6154)

(defparameter %sqlite3::+ioerr-nomem+ 3082)

(defparameter %sqlite3::+ioerr-rdlock+ 2314)

(defparameter %sqlite3::+ioerr-read+ 266)

(defparameter %sqlite3::+ioerr-rollback-atomic+ 7946)

(defparameter %sqlite3::+ioerr-seek+ 5642)

(defparameter %sqlite3::+ioerr-shmlock+ 5130)

(defparameter %sqlite3::+ioerr-shmmap+ 5386)

(defparameter %sqlite3::+ioerr-shmopen+ 4618)

(defparameter %sqlite3::+ioerr-shmsize+ 4874)

(defparameter %sqlite3::+ioerr-short-read+ 522)

(defparameter %sqlite3::+ioerr-truncate+ 1546)

(defparameter %sqlite3::+ioerr-unlock+ 2058)

(defparameter %sqlite3::+ioerr-vnode+ 6922)

(defparameter %sqlite3::+ioerr-write+ 778)

(defparameter %sqlite3::+last-errno+ 4)

(defparameter %sqlite3::+limit-attached+ 7)

(defparameter %sqlite3::+limit-column+ 2)

(defparameter %sqlite3::+limit-compound-select+ 4)

(defparameter %sqlite3::+limit-expr-depth+ 3)

(defparameter %sqlite3::+limit-function-arg+ 6)

(defparameter %sqlite3::+limit-length+ 0)

(defparameter %sqlite3::+limit-like-pattern-length+ 8)

(defparameter %sqlite3::+limit-sql-length+ 1)

(defparameter %sqlite3::+limit-trigger-depth+ 10)

(defparameter %sqlite3::+limit-variable-number+ 9)

(defparameter %sqlite3::+limit-vdbe-op+ 5)

(defparameter %sqlite3::+limit-worker-threads+ 11)

(defparameter %sqlite3::+locked+ 6)

(defparameter %sqlite3::+locked-sharedcache+ 262)

(defparameter %sqlite3::+locked-vtab+ 518)

(defparameter %sqlite3::+lock-exclusive+ 4)

(defparameter %sqlite3::+lock-none+ 0)

(defparameter %sqlite3::+lock-pending+ 3)

(defparameter %sqlite3::+lock-reserved+ 2)

(defparameter %sqlite3::+lock-shared+ 1)

(defparameter %sqlite3::+mismatch+ 20)

(defparameter %sqlite3::+misuse+ 21)

(defparameter %sqlite3::+mutex-fast+ 0)

(defparameter %sqlite3::+mutex-recursive+ 1)

(defparameter %sqlite3::+mutex-static-app1+ 8)

(defparameter %sqlite3::+mutex-static-app2+ 9)

(defparameter %sqlite3::+mutex-static-app3+ 10)

(defparameter %sqlite3::+mutex-static-lru+ 6)

(defparameter %sqlite3::+mutex-static-lru2+ 7)

(defparameter %sqlite3::+mutex-static-main+ 2)

(defparameter %sqlite3::+mutex-static-master+ 2)

(defparameter %sqlite3::+mutex-static-mem+ 3)

(defparameter %sqlite3::+mutex-static-mem2+ 4)

(defparameter %sqlite3::+mutex-static-open+ 4)

(defparameter %sqlite3::+mutex-static-pmem+ 7)

(defparameter %sqlite3::+mutex-static-prng+ 5)

(defparameter %sqlite3::+mutex-static-vfs1+ 11)

(defparameter %sqlite3::+mutex-static-vfs2+ 12)

(defparameter %sqlite3::+mutex-static-vfs3+ 13)

(defparameter %sqlite3::+nolfs+ 22)

(defparameter %sqlite3::+nomem+ 7)

(defparameter %sqlite3::+notadb+ 26)

(defparameter %sqlite3::+notfound+ 12)

(defparameter %sqlite3::+notice+ 27)

(defparameter %sqlite3::+notice-recover-rollback+ 539)

(defparameter %sqlite3::+notice-recover-wal+ 283)

(defparameter %sqlite3::+null+ 5)

(defparameter %sqlite3::+ok+ 0)

(defparameter %sqlite3::+ok-load-permanently+ 256)

(defparameter %sqlite3::+ok-symlink+ 512)

(defparameter %sqlite3::+open-autoproxy+ 32)

(defparameter %sqlite3::+open-create+ 4)

(defparameter %sqlite3::+open-deleteonclose+ 8)

(defparameter %sqlite3::+open-exclusive+ 16)

(defparameter %sqlite3::+open-exrescode+ 33554432)

(defparameter %sqlite3::+open-fullmutex+ 65536)

(defparameter %sqlite3::+open-main-db+ 256)

(defparameter %sqlite3::+open-main-journal+ 2048)

(defparameter %sqlite3::+open-master-journal+ 16384)

(defparameter %sqlite3::+open-memory+ 128)

(defparameter %sqlite3::+open-nofollow+ 16777216)

(defparameter %sqlite3::+open-nomutex+ 32768)

(defparameter %sqlite3::+open-privatecache+ 262144)

(defparameter %sqlite3::+open-readonly+ 1)

(defparameter %sqlite3::+open-readwrite+ 2)

(defparameter %sqlite3::+open-sharedcache+ 131072)

(defparameter %sqlite3::+open-subjournal+ 8192)

(defparameter %sqlite3::+open-super-journal+ 16384)

(defparameter %sqlite3::+open-temp-db+ 512)

(defparameter %sqlite3::+open-temp-journal+ 4096)

(defparameter %sqlite3::+open-transient-db+ 1024)

(defparameter %sqlite3::+open-uri+ 64)

(defparameter %sqlite3::+open-wal+ 524288)

(defparameter %sqlite3::+perm+ 3)

(defparameter %sqlite3::+pragma+ 19)

(defparameter %sqlite3::+prepare-normalize+ 2)

(defparameter %sqlite3::+prepare-no-vtab+ 4)

(defparameter %sqlite3::+prepare-persistent+ 1)

(defparameter %sqlite3::+protocol+ 15)

(defparameter %sqlite3::+range+ 25)

(defparameter %sqlite3::+read+ 20)

(defparameter %sqlite3::+readonly+ 8)

(defparameter %sqlite3::+readonly-cantinit+ 1288)

(defparameter %sqlite3::+readonly-cantlock+ 520)

(defparameter %sqlite3::+readonly-dbmoved+ 1032)

(defparameter %sqlite3::+readonly-directory+ 1544)

(defparameter %sqlite3::+readonly-recovery+ 264)

(defparameter %sqlite3::+readonly-rollback+ 776)

(defparameter %sqlite3::+recursive+ 33)

(defparameter %sqlite3::+reindex+ 27)

(defparameter %sqlite3::+replace+ 5)

(defparameter %sqlite3::+rollback+ 1)

(defparameter %sqlite3::+row+ 100)

(defparameter %sqlite3::+savepoint+ 32)

(defparameter %sqlite3::+scanstat-est+ 2)

(defparameter %sqlite3::+scanstat-explain+ 4)

(defparameter %sqlite3::+scanstat-name+ 3)

(defparameter %sqlite3::+scanstat-nloop+ 0)

(defparameter %sqlite3::+scanstat-nvisit+ 1)

(defparameter %sqlite3::+scanstat-selectid+ 5)

(defparameter %sqlite3::+schema+ 17)

(defparameter %sqlite3::+select+ 21)

(defparameter %sqlite3::+serialize-nocopy+ 1)

(defparameter %sqlite3::+set-lockproxyfile+ 3)

(defparameter %sqlite3::+shm-exclusive+ 8)

(defparameter %sqlite3::+shm-lock+ 2)

(defparameter %sqlite3::+shm-nlock+ 8)

(defparameter %sqlite3::+shm-shared+ 4)

(defparameter %sqlite3::+shm-unlock+ 1)

(defparameter %sqlite3::+status-malloc-count+ 9)

(defparameter %sqlite3::+status-malloc-size+ 5)

(defparameter %sqlite3::+status-memory-used+ 0)

(defparameter %sqlite3::+status-pagecache-overflow+ 2)

(defparameter %sqlite3::+status-pagecache-size+ 7)

(defparameter %sqlite3::+status-pagecache-used+ 1)

(defparameter %sqlite3::+status-parser-stack+ 6)

(defparameter %sqlite3::+status-scratch-overflow+ 4)

(defparameter %sqlite3::+status-scratch-size+ 8)

(defparameter %sqlite3::+status-scratch-used+ 3)

(defparameter %sqlite3::+stmtstatus-autoindex+ 3)

(defparameter %sqlite3::+stmtstatus-filter-hit+ 8)

(defparameter %sqlite3::+stmtstatus-filter-miss+ 7)

(defparameter %sqlite3::+stmtstatus-fullscan-step+ 1)

(defparameter %sqlite3::+stmtstatus-memused+ 99)

(defparameter %sqlite3::+stmtstatus-reprepare+ 5)

(defparameter %sqlite3::+stmtstatus-run+ 6)

(defparameter %sqlite3::+stmtstatus-sort+ 2)

(defparameter %sqlite3::+stmtstatus-vm-step+ 4)

(defparameter %sqlite3::+subtype+ 1048576)

(defparameter %sqlite3::+sync-dataonly+ 16)

(defparameter %sqlite3::+sync-full+ 3)

(defparameter %sqlite3::+sync-normal+ 2)

(defparameter %sqlite3::+testctrl-always+ 13)

(defparameter %sqlite3::+testctrl-assert+ 12)

(defparameter %sqlite3::+testctrl-benign-malloc-hooks+ 10)

(defparameter %sqlite3::+testctrl-bitvec-test+ 8)

(defparameter %sqlite3::+testctrl-byteorder+ 22)

(defparameter %sqlite3::+testctrl-explain-stmt+ 19)

(defparameter %sqlite3::+testctrl-extra-schema-checks+ 29)

(defparameter %sqlite3::+testctrl-fault-install+ 9)

(defparameter %sqlite3::+testctrl-first+ 5)

(defparameter %sqlite3::+testctrl-imposter+ 25)

(defparameter %sqlite3::+testctrl-internal-functions+ 17)

(defparameter %sqlite3::+testctrl-isinit+ 23)

(defparameter %sqlite3::+testctrl-iskeyword+ 16)

(defparameter %sqlite3::+testctrl-last+ 33)

(defparameter %sqlite3::+testctrl-localtime-fault+ 18)

(defparameter %sqlite3::+testctrl-logest+ 33)

(defparameter %sqlite3::+testctrl-never-corrupt+ 20)

(defparameter %sqlite3::+testctrl-once-reset-threshold+ 19)

(defparameter %sqlite3::+testctrl-optimizations+ 15)

(defparameter %sqlite3::+testctrl-parser-coverage+ 26)

(defparameter %sqlite3::+testctrl-pending-byte+ 11)

(defparameter %sqlite3::+testctrl-prng-reset+ 7)

(defparameter %sqlite3::+testctrl-prng-restore+ 6)

(defparameter %sqlite3::+testctrl-prng-save+ 5)

(defparameter %sqlite3::+testctrl-prng-seed+ 28)

(defparameter %sqlite3::+testctrl-reserve+ 14)

(defparameter %sqlite3::+testctrl-result-intreal+ 27)

(defparameter %sqlite3::+testctrl-scratchmalloc+ 17)

(defparameter %sqlite3::+testctrl-seek-count+ 30)

(defparameter %sqlite3::+testctrl-sorter-mmap+ 24)

(defparameter %sqlite3::+testctrl-traceflags+ 31)

(defparameter %sqlite3::+testctrl-tune+ 32)

(defparameter %sqlite3::+testctrl-vdbe-coverage+ 21)

(defparameter %sqlite3::+text+ 3)

(defparameter %sqlite3::+toobig+ 18)

(defparameter %sqlite3::+trace-close+ 8)

(defparameter %sqlite3::+trace-profile+ 2)

(defparameter %sqlite3::+trace-row+ 4)

(defparameter %sqlite3::+trace-stmt+ 1)

(defparameter %sqlite3::+transaction+ 22)

(defparameter %sqlite3::+txn-none+ 0)

(defparameter %sqlite3::+txn-read+ 1)

(defparameter %sqlite3::+txn-write+ 2)

(defparameter %sqlite3::+update+ 23)

(defparameter %sqlite3::+utf16+ 4)

(defparameter %sqlite3::+utf16be+ 3)

(defparameter %sqlite3::+utf16le+ 2)

(defparameter %sqlite3::+utf16-aligned+ 8)

(defparameter %sqlite3::+utf8+ 1)

(defparameter %sqlite3::+vtab-constraint-support+ 1)

(defparameter %sqlite3::+vtab-directonly+ 3)

(defparameter %sqlite3::+vtab-innocuous+ 2)

(defparameter %sqlite3::+warning+ 28)

(defparameter %sqlite3::+warning-autoindex+ 284)

(defparameter %sqlite3::+win32-data-directory-type+ 1)

(defparameter %sqlite3::+win32-temp-directory-type+ 2)

(cffi:defcstruct (%sqlite3::context :size 0))

(cffi:defctype %sqlite3::context (:struct %sqlite3::context))

(cffi:defcfun ("sqlite3_aggregate_context" %sqlite3::aggregate-context)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::n-bytes :int))

(cffi:defcfun ("sqlite3_aggregate_count" %sqlite3::aggregate-count)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_auto_extension" %sqlite3::auto-extension)
    :int
  (%sqlite3::x-entry-point (:pointer :void)))

(cffi:defcstruct (%sqlite3::sqlite3 :size 0))

(cffi:defctype %sqlite3::sqlite3 (:struct %sqlite3::sqlite3))

(cffi:defcfun ("sqlite3_autovacuum_pages" %sqlite3::autovacuum-pages)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcstruct (%sqlite3::backup :size 0))

(cffi:defctype %sqlite3::backup (:struct %sqlite3::backup))

(cffi:defcfun ("sqlite3_backup_finish" %sqlite3::backup-finish)
    :int
  (%sqlite3::p (:pointer %sqlite3::backup)))

(cffi:defcfun ("sqlite3_backup_init" %sqlite3::backup-init)
    (:pointer %sqlite3::backup)
  (%sqlite3::p-dest (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-dest-name :string)
  (%sqlite3::p-source (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-source-name :string))

(cffi:defcfun ("sqlite3_backup_pagecount" %sqlite3::backup-pagecount)
    :int
  (%sqlite3::p (:pointer %sqlite3::backup)))

(cffi:defcfun ("sqlite3_backup_remaining" %sqlite3::backup-remaining)
    :int
  (%sqlite3::p (:pointer %sqlite3::backup)))

(cffi:defcfun ("sqlite3_backup_step" %sqlite3::backup-step)
    :int
  (%sqlite3::p (:pointer %sqlite3::backup))
  (%sqlite3::n-page :int))

(cffi:defcstruct (%sqlite3::stmt :size 0))

(cffi:defctype %sqlite3::stmt (:struct %sqlite3::stmt))

(cffi:defcfun ("sqlite3_bind_blob" %sqlite3::bind-blob)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::n :int)
  (%sqlite3::arg4 (:pointer :void)))

(cffi:defctype %sqlite3::uint64 :unsigned-long-long)

(cffi:defcfun ("sqlite3_bind_blob64" %sqlite3::bind-blob64)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::arg3 %sqlite3::uint64)
  (%sqlite3::arg4 (:pointer :void)))

(cffi:defcfun ("sqlite3_bind_double" %sqlite3::bind-double)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 :double))

(cffi:defcfun ("sqlite3_bind_int" %sqlite3::bind-int)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 :int))

(cffi:defctype %sqlite3::int64 :long-long)

(cffi:defcfun ("sqlite3_bind_int64" %sqlite3::bind-int64)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 %sqlite3::int64))

(cffi:defcfun ("sqlite3_bind_null" %sqlite3::bind-null)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_bind_parameter_count" %sqlite3::bind-parameter-count)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_bind_parameter_index" %sqlite3::bind-parameter-index)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::z-name :string))

(cffi:defcfun ("sqlite3_bind_parameter_name" %sqlite3::bind-parameter-name)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_bind_pointer" %sqlite3::bind-pointer)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::arg3 :string)
  (%sqlite3::arg4 (:pointer :void)))

(cffi:defcfun ("sqlite3_bind_text" %sqlite3::bind-text)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 :string)
  (%sqlite3::arg3 :int)
  (%sqlite3::arg4 (:pointer :void)))

(cffi:defcfun ("sqlite3_bind_text16" %sqlite3::bind-text16)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::arg3 :int)
  (%sqlite3::arg4 (:pointer :void)))

(cffi:defcfun ("sqlite3_bind_text64" %sqlite3::bind-text64)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 :string)
  (%sqlite3::arg3 %sqlite3::uint64)
  (%sqlite3::arg4 (:pointer :void))
  (%sqlite3::encoding :unsigned-char))

(cffi:defcstruct (%sqlite3::value :size 0))

(cffi:defctype %sqlite3::value (:struct %sqlite3::value))

(cffi:defcfun ("sqlite3_bind_value" %sqlite3::bind-value)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_bind_zeroblob" %sqlite3::bind-zeroblob)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_bind_zeroblob64" %sqlite3::bind-zeroblob64)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 %sqlite3::uint64))

(cffi:defcstruct (%sqlite3::blob :size 0))

(cffi:defctype %sqlite3::blob (:struct %sqlite3::blob))

(cffi:defcfun ("sqlite3_blob_bytes" %sqlite3::blob-bytes)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::blob)))

(cffi:defcfun ("sqlite3_blob_close" %sqlite3::blob-close)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::blob)))

(cffi:defcfun ("sqlite3_blob_open" %sqlite3::blob-open)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db :string)
  (%sqlite3::z-table :string)
  (%sqlite3::z-column :string)
  (%sqlite3::i-row %sqlite3::int64)
  (%sqlite3::flags :int)
  (%sqlite3::pp-blob (:pointer (:pointer %sqlite3::blob))))

(cffi:defcfun ("sqlite3_blob_read" %sqlite3::blob-read)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::blob))
  (%sqlite3::z (:pointer :void))
  (%sqlite3::n :int)
  (%sqlite3::i-offset :int))

(cffi:defcfun ("sqlite3_blob_reopen" %sqlite3::blob-reopen)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::blob))
  (%sqlite3::arg1 %sqlite3::int64))

(cffi:defcfun ("sqlite3_blob_write" %sqlite3::blob-write)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::blob))
  (%sqlite3::z (:pointer :void))
  (%sqlite3::n :int)
  (%sqlite3::i-offset :int))

(cffi:defcfun ("sqlite3_busy_handler" %sqlite3::busy-handler)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_busy_timeout" %sqlite3::busy-timeout)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::ms :int))

(cffi:defcfun ("sqlite3_cancel_auto_extension" %sqlite3::cancel-auto-extension)
    :int
  (%sqlite3::x-entry-point (:pointer :void)))

(cffi:defcfun ("sqlite3_changes" %sqlite3::changes)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_changes64" %sqlite3::changes64)
    %sqlite3::int64
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_clear_bindings" %sqlite3::clear-bindings)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_close" %sqlite3::close)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_close_v2" %sqlite3::close-v2)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_collation_needed" %sqlite3::collation-needed)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_collation_needed16" %sqlite3::collation-needed16)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_column_blob" %sqlite3::column-blob)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_bytes" %sqlite3::column-bytes)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_bytes16" %sqlite3::column-bytes16)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_count" %sqlite3::column-count)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_column_database_name" %sqlite3::column-database-name)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_database_name16"
               %sqlite3::column-database-name16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_decltype" %sqlite3::column-decltype)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_decltype16" %sqlite3::column-decltype16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_double" %sqlite3::column-double)
    :double
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_int" %sqlite3::column-int)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_int64" %sqlite3::column-int64)
    %sqlite3::int64
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_name" %sqlite3::column-name)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_column_name16" %sqlite3::column-name16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_column_origin_name" %sqlite3::column-origin-name)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_origin_name16" %sqlite3::column-origin-name16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_table_name" %sqlite3::column-table-name)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_table_name16" %sqlite3::column-table-name16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_column_text16" %sqlite3::column-text16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_type" %sqlite3::column-type)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_column_value" %sqlite3::column-value)
    (:pointer %sqlite3::value)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::i-col :int))

(cffi:defcfun ("sqlite3_commit_hook" %sqlite3::commit-hook)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_compileoption_get" %sqlite3::compileoption-get)
    :string
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_compileoption_used" %sqlite3::compileoption-used)
    :int
  (%sqlite3::z-opt-name :string))

(cffi:defcfun ("sqlite3_complete" %sqlite3::complete)
    :int
  (%sqlite3::sql :string))

(cffi:defcfun ("sqlite3_complete16" %sqlite3::complete16)
    :int
  (%sqlite3::sql (:pointer :void)))

(cffi:defcfun ("sqlite3_config" %sqlite3::config)
    :int
  (%sqlite3::arg0 :int)
  &rest)

(cffi:defcfun ("sqlite3_context_db_handle" %sqlite3::context-db-handle)
    (:pointer %sqlite3::sqlite3)
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_create_collation" %sqlite3::create-collation)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-name :string)
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-arg (:pointer :void))
  (%sqlite3::x-compare (:pointer :void)))

(cffi:defcfun ("sqlite3_create_collation16" %sqlite3::create-collation16)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-name (:pointer :void))
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-arg (:pointer :void))
  (%sqlite3::x-compare (:pointer :void)))

(cffi:defcfun ("sqlite3_create_collation_v2" %sqlite3::create-collation-v2)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-name :string)
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-arg (:pointer :void))
  (%sqlite3::x-compare (:pointer :void))
  (%sqlite3::x-destroy (:pointer :void)))

(cffi:defcfun ("sqlite3_create_filename" %sqlite3::create-filename)
    :string
  (%sqlite3::z-database :string)
  (%sqlite3::z-journal :string)
  (%sqlite3::z-wal :string)
  (%sqlite3::n-param :int)
  (%sqlite3::az-param :string))

(cffi:defcfun ("sqlite3_create_function" %sqlite3::create-function)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-function-name :string)
  (%sqlite3::n-arg :int)
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-app (:pointer :void))
  (%sqlite3::x-func (:pointer :void))
  (%sqlite3::x-step (:pointer :void))
  (%sqlite3::x-final (:pointer :void)))

(cffi:defcfun ("sqlite3_create_function16" %sqlite3::create-function16)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-function-name (:pointer :void))
  (%sqlite3::n-arg :int)
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-app (:pointer :void))
  (%sqlite3::x-func (:pointer :void))
  (%sqlite3::x-step (:pointer :void))
  (%sqlite3::x-final (:pointer :void)))

(cffi:defcfun ("sqlite3_create_function_v2" %sqlite3::create-function-v2)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-function-name :string)
  (%sqlite3::n-arg :int)
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-app (:pointer :void))
  (%sqlite3::x-func (:pointer :void))
  (%sqlite3::x-step (:pointer :void))
  (%sqlite3::x-final (:pointer :void))
  (%sqlite3::x-destroy (:pointer :void)))

(cffi:defcstruct (%sqlite3::module :size 192)
  (%sqlite3::i-version :int :offset 0)
  (%sqlite3::x-create (:pointer :void) :offset 8)
  (%sqlite3::x-connect (:pointer :void) :offset 16)
  (%sqlite3::x-best-index (:pointer :void) :offset 24)
  (%sqlite3::x-disconnect (:pointer :void) :offset 32)
  (%sqlite3::x-destroy (:pointer :void) :offset 40)
  (%sqlite3::x-open (:pointer :void) :offset 48)
  (%sqlite3::x-close (:pointer :void) :offset 56)
  (%sqlite3::x-filter (:pointer :void) :offset 64)
  (%sqlite3::x-next (:pointer :void) :offset 72)
  (%sqlite3::x-eof (:pointer :void) :offset 80)
  (%sqlite3::x-column (:pointer :void) :offset 88)
  (%sqlite3::x-rowid (:pointer :void) :offset 96)
  (%sqlite3::x-update (:pointer :void) :offset 104)
  (%sqlite3::x-begin (:pointer :void) :offset 112)
  (%sqlite3::x-sync (:pointer :void) :offset 120)
  (%sqlite3::x-commit (:pointer :void) :offset 128)
  (%sqlite3::x-rollback (:pointer :void) :offset 136)
  (%sqlite3::x-find-function (:pointer :void) :offset 144)
  (%sqlite3::x-rename (:pointer :void) :offset 152)
  (%sqlite3::x-savepoint (:pointer :void) :offset 160)
  (%sqlite3::x-release (:pointer :void) :offset 168)
  (%sqlite3::x-rollback-to (:pointer :void) :offset 176)
  (%sqlite3::x-shadow-name (:pointer :void) :offset 184))

(cffi:defctype %sqlite3::module (:struct %sqlite3::module))

(cffi:defcfun ("sqlite3_create_module" %sqlite3::create-module)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-name :string)
  (%sqlite3::p (:pointer %sqlite3::module))
  (%sqlite3::p-client-data (:pointer :void)))

(cffi:defcfun ("sqlite3_create_module_v2" %sqlite3::create-module-v2)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-name :string)
  (%sqlite3::p (:pointer %sqlite3::module))
  (%sqlite3::p-client-data (:pointer :void))
  (%sqlite3::x-destroy (:pointer :void)))

(cffi:defcfun ("sqlite3_create_window_function"
               %sqlite3::create-window-function)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-function-name :string)
  (%sqlite3::n-arg :int)
  (%sqlite3::e-text-rep :int)
  (%sqlite3::p-app (:pointer :void))
  (%sqlite3::x-step (:pointer :void))
  (%sqlite3::x-final (:pointer :void))
  (%sqlite3::x-value (:pointer :void))
  (%sqlite3::x-inverse (:pointer :void))
  (%sqlite3::x-destroy (:pointer :void)))

(cffi:defcfun ("sqlite3_data_count" %sqlite3::data-count)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcstruct (%sqlite3::io-methods :size 152)
  (%sqlite3::i-version :int :offset 0)
  (%sqlite3::x-close (:pointer :void) :offset 8)
  (%sqlite3::x-read (:pointer :void) :offset 16)
  (%sqlite3::x-write (:pointer :void) :offset 24)
  (%sqlite3::x-truncate (:pointer :void) :offset 32)
  (%sqlite3::x-sync (:pointer :void) :offset 40)
  (%sqlite3::x-file-size (:pointer :void) :offset 48)
  (%sqlite3::x-lock (:pointer :void) :offset 56)
  (%sqlite3::x-unlock (:pointer :void) :offset 64)
  (%sqlite3::x-check-reserved-lock (:pointer :void) :offset 72)
  (%sqlite3::x-file-control (:pointer :void) :offset 80)
  (%sqlite3::x-sector-size (:pointer :void) :offset 88)
  (%sqlite3::x-device-characteristics (:pointer :void) :offset 96)
  (%sqlite3::x-shm-map (:pointer :void) :offset 104)
  (%sqlite3::x-shm-lock (:pointer :void) :offset 112)
  (%sqlite3::x-shm-barrier (:pointer :void) :offset 120)
  (%sqlite3::x-shm-unmap (:pointer :void) :offset 128)
  (%sqlite3::x-fetch (:pointer :void) :offset 136)
  (%sqlite3::x-unfetch (:pointer :void) :offset 144))

(cffi:defcstruct (%sqlite3::file :size 8)
  (%sqlite3::p-methods (:pointer (:struct %sqlite3::io-methods)) :offset 0))

(cffi:defctype %sqlite3::file (:struct %sqlite3::file))

(cffi:defcfun ("sqlite3_database_file_object" %sqlite3::database-file-object)
    (:pointer %sqlite3::file)
  (%sqlite3::arg0 :string))

(cffi:defcfun ("sqlite3_db_cacheflush" %sqlite3::db-cacheflush)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_db_config" %sqlite3::db-config)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::op :int)
  &rest)

(cffi:defcfun ("sqlite3_db_filename" %sqlite3::db-filename)
    :string
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db-name :string))

(cffi:defcfun ("sqlite3_db_handle" %sqlite3::db-handle)
    (:pointer %sqlite3::sqlite3)
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcstruct (%sqlite3::mutex :size 0))

(cffi:defctype %sqlite3::mutex (:struct %sqlite3::mutex))

(cffi:defcfun ("sqlite3_db_mutex" %sqlite3::db-mutex)
    (:pointer %sqlite3::mutex)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_db_readonly" %sqlite3::db-readonly)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db-name :string))

(cffi:defcfun ("sqlite3_db_release_memory" %sqlite3::db-release-memory)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_db_status" %sqlite3::db-status)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::op :int)
  (%sqlite3::p-cur (:pointer :int))
  (%sqlite3::p-hiwtr (:pointer :int))
  (%sqlite3::reset-flg :int))

(cffi:defcfun ("sqlite3_declare_vtab" %sqlite3::declare-vtab)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql :string))

(cffi:defcfun ("sqlite3_deserialize" %sqlite3::deserialize)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-schema :string)
  (%sqlite3::p-data (:pointer :unsigned-char))
  (%sqlite3::sz-db %sqlite3::int64)
  (%sqlite3::sz-buf %sqlite3::int64)
  (%sqlite3::m-flags :unsigned-int))

(cffi:defcfun ("sqlite3_drop_modules" %sqlite3::drop-modules)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::az-keep :string))

(cffi:defcfun ("sqlite3_enable_load_extension" %sqlite3::enable-load-extension)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::onoff :int))

(cffi:defcfun ("sqlite3_enable_shared_cache" %sqlite3::enable-shared-cache)
    :int
  (%sqlite3::arg0 :int))

(cffi:defcfun ("sqlite3_errcode" %sqlite3::errcode)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_errmsg" %sqlite3::errmsg)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_errmsg16" %sqlite3::errmsg16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_error_offset" %sqlite3::error-offset)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_errstr" %sqlite3::errstr)
    :string
  (%sqlite3::arg0 :int))

(cffi:defcfun ("sqlite3_exec" %sqlite3::exec)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::sql :string)
  (%sqlite3::callback (:pointer :void))
  (%sqlite3::arg3 (:pointer :void))
  (%sqlite3::errmsg :string))

(cffi:defcfun ("sqlite3_expanded_sql" %sqlite3::expanded-sql)
    :string
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_expired" %sqlite3::expired)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_extended_errcode" %sqlite3::extended-errcode)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_extended_result_codes" %sqlite3::extended-result-codes)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::onoff :int))

(cffi:defcfun ("sqlite3_file_control" %sqlite3::file-control)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db-name :string)
  (%sqlite3::op :int)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_filename_database" %sqlite3::filename-database)
    :string
  (%sqlite3::arg0 :string))

(cffi:defcfun ("sqlite3_filename_journal" %sqlite3::filename-journal)
    :string
  (%sqlite3::arg0 :string))

(cffi:defcfun ("sqlite3_filename_wal" %sqlite3::filename-wal)
    :string
  (%sqlite3::arg0 :string))

(cffi:defcfun ("sqlite3_finalize" %sqlite3::finalize)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_free" %sqlite3::free)
    :void
  (%sqlite3::arg0 (:pointer :void)))

(cffi:defcfun ("sqlite3_free_filename" %sqlite3::free-filename)
    :void
  (%sqlite3::arg0 :string))

(cffi:defcfun ("sqlite3_free_table" %sqlite3::free-table)
    :void
  (%sqlite3::result :string))

(cffi:defcfun ("sqlite3_get_autocommit" %sqlite3::get-autocommit)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_get_auxdata" %sqlite3::get-auxdata)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_get_table" %sqlite3::get-table)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql :string)
  (%sqlite3::paz-result :string)
  (%sqlite3::pn-row (:pointer :int))
  (%sqlite3::pn-column (:pointer :int))
  (%sqlite3::pz-errmsg :string))

(cffi:defcfun ("sqlite3_global_recover" %sqlite3::global-recover)
    :int)

(cffi:defcfun ("sqlite3_hard_heap_limit64" %sqlite3::hard-heap-limit64)
    %sqlite3::int64
  (%sqlite3::n %sqlite3::int64))

(cffi:defcfun ("sqlite3_initialize" %sqlite3::initialize)
    :int)

(cffi:defcfun ("sqlite3_interrupt" %sqlite3::interrupt)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_keyword_check" %sqlite3::keyword-check)
    :int
  (%sqlite3::arg0 :string)
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_keyword_count" %sqlite3::keyword-count)
    :int)

(cffi:defcfun ("sqlite3_keyword_name" %sqlite3::keyword-name)
    :int
  (%sqlite3::arg0 :int)
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 (:pointer :int)))

(cffi:defcfun ("sqlite3_last_insert_rowid" %sqlite3::last-insert-rowid)
    %sqlite3::int64
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_libversion" %sqlite3::libversion)
    :string)

(cffi:defcfun ("sqlite3_libversion_number" %sqlite3::libversion-number)
    :int)

(cffi:defcfun ("sqlite3_limit" %sqlite3::limit)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::id :int)
  (%sqlite3::new-val :int))

(cffi:defcfun ("sqlite3_load_extension" %sqlite3::load-extension)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-file :string)
  (%sqlite3::z-proc :string)
  (%sqlite3::pz-err-msg :string))

(cffi:defcfun ("sqlite3_log" %sqlite3::log)
    :void
  (%sqlite3::i-err-code :int)
  (%sqlite3::z-format :string)
  &rest)

(cffi:defcfun ("sqlite3_malloc" %sqlite3::malloc)
    (:pointer :void)
  (%sqlite3::arg0 :int))

(cffi:defcfun ("sqlite3_malloc64" %sqlite3::malloc64)
    (:pointer :void)
  (%sqlite3::arg0 %sqlite3::uint64))

(cffi:defcfun ("sqlite3_memory_alarm" %sqlite3::memory-alarm)
    :int
  (%sqlite3::arg0 (:pointer :void))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 %sqlite3::int64))

(cffi:defcfun ("sqlite3_memory_highwater" %sqlite3::memory-highwater)
    %sqlite3::int64
  (%sqlite3::reset-flag :int))

(cffi:defcfun ("sqlite3_memory_used" %sqlite3::memory-used)
    %sqlite3::int64)

(cffi:defcfun ("sqlite3_mprintf" %sqlite3::mprintf)
    :string
  (%sqlite3::arg0 :string)
  &rest)

(cffi:defcfun ("sqlite3_msize" %sqlite3::msize)
    %sqlite3::uint64
  (%sqlite3::arg0 (:pointer :void)))

(cffi:defcfun ("sqlite3_mutex_alloc" %sqlite3::mutex-alloc)
    (:pointer %sqlite3::mutex)
  (%sqlite3::arg0 :int))

(cffi:defcfun ("sqlite3_mutex_enter" %sqlite3::mutex-enter)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::mutex)))

(cffi:defcfun ("sqlite3_mutex_free" %sqlite3::mutex-free)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::mutex)))

(cffi:defcfun ("sqlite3_mutex_held" %sqlite3::mutex-held)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::mutex)))

(cffi:defcfun ("sqlite3_mutex_leave" %sqlite3::mutex-leave)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::mutex)))

(cffi:defcfun ("sqlite3_mutex_notheld" %sqlite3::mutex-notheld)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::mutex)))

(cffi:defcfun ("sqlite3_mutex_try" %sqlite3::mutex-try)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::mutex)))

(cffi:defcfun ("sqlite3_next_stmt" %sqlite3::next-stmt)
    (:pointer %sqlite3::stmt)
  (%sqlite3::p-db (:pointer %sqlite3::sqlite3))
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_open" %sqlite3::open)
    :int
  (%sqlite3::filename :string)
  (%sqlite3::pp-db (:pointer (:pointer %sqlite3::sqlite3))))

(cffi:defcfun ("sqlite3_open16" %sqlite3::open16)
    :int
  (%sqlite3::filename (:pointer :void))
  (%sqlite3::pp-db (:pointer (:pointer %sqlite3::sqlite3))))

(cffi:defcfun ("sqlite3_open_v2" %sqlite3::open-v2)
    :int
  (%sqlite3::filename :string)
  (%sqlite3::pp-db (:pointer (:pointer %sqlite3::sqlite3)))
  (%sqlite3::flags :int)
  (%sqlite3::z-vfs :string))

(cffi:defcfun ("sqlite3_os_end" %sqlite3::os-end)
    :int)

(cffi:defcfun ("sqlite3_os_init" %sqlite3::os-init)
    :int)

(cffi:defcfun ("sqlite3_overload_function" %sqlite3::overload-function)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-func-name :string)
  (%sqlite3::n-arg :int))

(cffi:defcfun ("sqlite3_prepare" %sqlite3::prepare)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql :string)
  (%sqlite3::n-byte :int)
  (%sqlite3::pp-stmt (:pointer (:pointer %sqlite3::stmt)))
  (%sqlite3::pz-tail :string))

(cffi:defcfun ("sqlite3_prepare16" %sqlite3::prepare16)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql (:pointer :void))
  (%sqlite3::n-byte :int)
  (%sqlite3::pp-stmt (:pointer (:pointer %sqlite3::stmt)))
  (%sqlite3::pz-tail (:pointer (:pointer :void))))

(cffi:defcfun ("sqlite3_prepare16_v2" %sqlite3::prepare16-v2)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql (:pointer :void))
  (%sqlite3::n-byte :int)
  (%sqlite3::pp-stmt (:pointer (:pointer %sqlite3::stmt)))
  (%sqlite3::pz-tail (:pointer (:pointer :void))))

(cffi:defcfun ("sqlite3_prepare16_v3" %sqlite3::prepare16-v3)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql (:pointer :void))
  (%sqlite3::n-byte :int)
  (%sqlite3::prep-flags :unsigned-int)
  (%sqlite3::pp-stmt (:pointer (:pointer %sqlite3::stmt)))
  (%sqlite3::pz-tail (:pointer (:pointer :void))))

(cffi:defcfun ("sqlite3_prepare_v2" %sqlite3::prepare-v2)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql :string)
  (%sqlite3::n-byte :int)
  (%sqlite3::pp-stmt (:pointer (:pointer %sqlite3::stmt)))
  (%sqlite3::pz-tail :string))

(cffi:defcfun ("sqlite3_prepare_v3" %sqlite3::prepare-v3)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-sql :string)
  (%sqlite3::n-byte :int)
  (%sqlite3::prep-flags :unsigned-int)
  (%sqlite3::pp-stmt (:pointer (:pointer %sqlite3::stmt)))
  (%sqlite3::pz-tail :string))

(cffi:defcfun ("sqlite3_profile" %sqlite3::profile)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::x-profile (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_progress_handler" %sqlite3::progress-handler)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 :int)
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_randomness" %sqlite3::randomness)
    :void
  (%sqlite3::n :int)
  (%sqlite3::p (:pointer :void)))

(cffi:defcfun ("sqlite3_realloc" %sqlite3::realloc)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer :void))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_realloc64" %sqlite3::realloc64)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer :void))
  (%sqlite3::arg1 %sqlite3::uint64))

(cffi:defcfun ("sqlite3_release_memory" %sqlite3::release-memory)
    :int
  (%sqlite3::arg0 :int))

(cffi:defcfun ("sqlite3_reset" %sqlite3::reset)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_reset_auto_extension" %sqlite3::reset-auto-extension)
    :void)

(cffi:defcfun ("sqlite3_result_blob" %sqlite3::result-blob)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 :int)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_blob64" %sqlite3::result-blob64)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 %sqlite3::uint64)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_double" %sqlite3::result-double)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :double))

(cffi:defcfun ("sqlite3_result_error" %sqlite3::result-error)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 :int))

(cffi:defcfun ("sqlite3_result_error16" %sqlite3::result-error16)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 :int))

(cffi:defcfun ("sqlite3_result_error_code" %sqlite3::result-error-code)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_result_error_nomem" %sqlite3::result-error-nomem)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_result_error_toobig" %sqlite3::result-error-toobig)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_result_int" %sqlite3::result-int)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_result_int64" %sqlite3::result-int64)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 %sqlite3::int64))

(cffi:defcfun ("sqlite3_result_null" %sqlite3::result-null)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_result_pointer" %sqlite3::result-pointer)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 :string)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_subtype" %sqlite3::result-subtype)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :unsigned-int))

(cffi:defcfun ("sqlite3_result_text" %sqlite3::result-text)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 :int)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_text16" %sqlite3::result-text16)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 :int)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_text16be" %sqlite3::result-text16be)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 :int)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_text16le" %sqlite3::result-text16le)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 :int)
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_result_text64" %sqlite3::result-text64)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 %sqlite3::uint64)
  (%sqlite3::arg3 (:pointer :void))
  (%sqlite3::encoding :unsigned-char))

(cffi:defcfun ("sqlite3_result_value" %sqlite3::result-value)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::arg1 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_result_zeroblob" %sqlite3::result-zeroblob)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_result_zeroblob64" %sqlite3::result-zeroblob64)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::n %sqlite3::uint64))

(cffi:defcfun ("sqlite3_rollback_hook" %sqlite3::rollback-hook)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_rtree_geometry_callback"
               %sqlite3::rtree-geometry-callback)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-geom :string)
  (%sqlite3::x-geom (:pointer :void))
  (%sqlite3::p-context (:pointer :void)))

(cffi:defcfun ("sqlite3_rtree_query_callback" %sqlite3::rtree-query-callback)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-query-func :string)
  (%sqlite3::x-query-func (:pointer :void))
  (%sqlite3::p-context (:pointer :void))
  (%sqlite3::x-destructor (:pointer :void)))

(cffi:defcfun ("sqlite3_serialize" %sqlite3::serialize)
    (:pointer :unsigned-char)
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-schema :string)
  (%sqlite3::pi-size (:pointer %sqlite3::int64))
  (%sqlite3::m-flags :unsigned-int))

(cffi:defcfun ("sqlite3_set_authorizer" %sqlite3::set-authorizer)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::x-auth (:pointer :void))
  (%sqlite3::p-user-data (:pointer :void)))

(cffi:defcfun ("sqlite3_set_auxdata" %sqlite3::set-auxdata)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::context))
  (%sqlite3::n :int)
  (%sqlite3::arg2 (:pointer :void))
  (%sqlite3::arg3 (:pointer :void)))

(cffi:defcfun ("sqlite3_set_last_insert_rowid" %sqlite3::set-last-insert-rowid)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 %sqlite3::int64))

(cffi:defcfun ("sqlite3_shutdown" %sqlite3::shutdown)
    :int)

(cffi:defcfun ("sqlite3_sleep" %sqlite3::sleep)
    :int
  (%sqlite3::arg0 :int))

(cffi:defcstruct (%sqlite3::snapshot :size 48)
  (%sqlite3::hidden :unsigned-char :count 48 :offset 0))

(cffi:defctype %sqlite3::snapshot (:struct %sqlite3::snapshot))

(cffi:defcfun ("sqlite3_snapshot_cmp" %sqlite3::snapshot-cmp)
    :int
  (%sqlite3::p1 (:pointer %sqlite3::snapshot))
  (%sqlite3::p2 (:pointer %sqlite3::snapshot)))

(cffi:defcfun ("sqlite3_snapshot_free" %sqlite3::snapshot-free)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::snapshot)))

(cffi:defcfun ("sqlite3_snapshot_get" %sqlite3::snapshot-get)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-schema :string)
  (%sqlite3::pp-snapshot (:pointer (:pointer %sqlite3::snapshot))))

(cffi:defcfun ("sqlite3_snapshot_open" %sqlite3::snapshot-open)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-schema :string)
  (%sqlite3::p-snapshot (:pointer %sqlite3::snapshot)))

(cffi:defcfun ("sqlite3_snapshot_recover" %sqlite3::snapshot-recover)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db :string))

(cffi:defcfun ("sqlite3_snprintf" %sqlite3::snprintf)
    :string
  (%sqlite3::arg0 :int)
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 :string)
  &rest)

(cffi:defcfun ("sqlite3_soft_heap_limit" %sqlite3::soft-heap-limit)
    :void
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_soft_heap_limit64" %sqlite3::soft-heap-limit64)
    %sqlite3::int64
  (%sqlite3::n %sqlite3::int64))

(cffi:defcfun ("sqlite3_sourceid" %sqlite3::sourceid)
    :string)

(cffi:defcfun ("sqlite3_sql" %sqlite3::sql)
    :string
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_status" %sqlite3::status)
    :int
  (%sqlite3::op :int)
  (%sqlite3::p-current (:pointer :int))
  (%sqlite3::p-highwater (:pointer :int))
  (%sqlite3::reset-flag :int))

(cffi:defcfun ("sqlite3_status64" %sqlite3::status64)
    :int
  (%sqlite3::op :int)
  (%sqlite3::p-current (:pointer %sqlite3::int64))
  (%sqlite3::p-highwater (:pointer %sqlite3::int64))
  (%sqlite3::reset-flag :int))

(cffi:defcfun ("sqlite3_step" %sqlite3::step)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_stmt_busy" %sqlite3::stmt-busy)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_stmt_isexplain" %sqlite3::stmt-isexplain)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_stmt_readonly" %sqlite3::stmt-readonly)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_stmt_scanstatus" %sqlite3::stmt-scanstatus)
    :int
  (%sqlite3::p-stmt (:pointer %sqlite3::stmt))
  (%sqlite3::idx :int)
  (%sqlite3::i-scan-status-op :int)
  (%sqlite3::p-out (:pointer :void)))

(cffi:defcfun ("sqlite3_stmt_scanstatus_reset" %sqlite3::stmt-scanstatus-reset)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_stmt_status" %sqlite3::stmt-status)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::op :int)
  (%sqlite3::reset-flg :int))

(cffi:defcstruct (%sqlite3::str :size 0))

(cffi:defctype %sqlite3::str (:struct %sqlite3::str))

(cffi:defcfun ("sqlite3_str_append" %sqlite3::str-append)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::str))
  (%sqlite3::z-in :string)
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_str_appendall" %sqlite3::str-appendall)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::str))
  (%sqlite3::z-in :string))

(cffi:defcfun ("sqlite3_str_appendchar" %sqlite3::str-appendchar)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::str))
  (%sqlite3::n :int)
  (%sqlite3::c :char))

(cffi:defcfun ("sqlite3_str_appendf" %sqlite3::str-appendf)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::str))
  (%sqlite3::z-format :string)
  &rest)

(cffi:defcfun ("sqlite3_str_errcode" %sqlite3::str-errcode)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::str)))

(cffi:defcfun ("sqlite3_str_finish" %sqlite3::str-finish)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::str)))

(cffi:defcfun ("sqlite3_str_length" %sqlite3::str-length)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::str)))

(cffi:defcfun ("sqlite3_str_new" %sqlite3::str-new)
    (:pointer %sqlite3::str)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_str_reset" %sqlite3::str-reset)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::str)))

(cffi:defcfun ("sqlite3_str_value" %sqlite3::str-value)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::str)))

(cffi:defctype %sqlite3::va-list (:pointer :void))

(cffi:defcfun ("sqlite3_str_vappendf" %sqlite3::str-vappendf)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::str))
  (%sqlite3::z-format :string)
  (%sqlite3::arg2 %sqlite3::va-list))

(cffi:defcfun ("sqlite3_strglob" %sqlite3::strglob)
    :int
  (%sqlite3::z-glob :string)
  (%sqlite3::z-str :string))

(cffi:defcfun ("sqlite3_stricmp" %sqlite3::stricmp)
    :int
  (%sqlite3::arg0 :string)
  (%sqlite3::arg1 :string))

(cffi:defcfun ("sqlite3_strlike" %sqlite3::strlike)
    :int
  (%sqlite3::z-glob :string)
  (%sqlite3::z-str :string)
  (%sqlite3::c-esc :unsigned-int))

(cffi:defcfun ("sqlite3_strnicmp" %sqlite3::strnicmp)
    :int
  (%sqlite3::arg0 :string)
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 :int))

(cffi:defcfun ("sqlite3_system_errno" %sqlite3::system-errno)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_table_column_metadata" %sqlite3::table-column-metadata)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db-name :string)
  (%sqlite3::z-table-name :string)
  (%sqlite3::z-column-name :string)
  (%sqlite3::pz-data-type :string)
  (%sqlite3::pz-coll-seq :string)
  (%sqlite3::p-not-null (:pointer :int))
  (%sqlite3::p-primary-key (:pointer :int))
  (%sqlite3::p-autoinc (:pointer :int)))

(cffi:defcfun ("sqlite3_test_control" %sqlite3::test-control)
    :int
  (%sqlite3::op :int)
  &rest)

(cffi:defcfun ("sqlite3_thread_cleanup" %sqlite3::thread-cleanup)
    :void)

(cffi:defcfun ("sqlite3_threadsafe" %sqlite3::threadsafe)
    :int)

(cffi:defcfun ("sqlite3_total_changes" %sqlite3::total-changes)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_total_changes64" %sqlite3::total-changes64)
    %sqlite3::int64
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_trace" %sqlite3::trace)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::x-trace (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_trace_v2" %sqlite3::trace-v2)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::u-mask :unsigned-int)
  (%sqlite3::x-callback (:pointer :void))
  (%sqlite3::p-ctx (:pointer :void)))

(cffi:defcfun ("sqlite3_transfer_bindings" %sqlite3::transfer-bindings)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::stmt))
  (%sqlite3::arg1 (:pointer %sqlite3::stmt)))

(cffi:defcfun ("sqlite3_txn_state" %sqlite3::txn-state)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-schema :string))

(cffi:defcfun ("sqlite3_unlock_notify" %sqlite3::unlock-notify)
    :int
  (%sqlite3::p-blocked (:pointer %sqlite3::sqlite3))
  (%sqlite3::x-notify (:pointer :void))
  (%sqlite3::p-notify-arg (:pointer :void)))

(cffi:defcfun ("sqlite3_update_hook" %sqlite3::update-hook)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_uri_boolean" %sqlite3::uri-boolean)
    :int
  (%sqlite3::z-file :string)
  (%sqlite3::z-param :string)
  (%sqlite3::b-default :int))

(cffi:defcfun ("sqlite3_uri_int64" %sqlite3::uri-int64)
    %sqlite3::int64
  (%sqlite3::arg0 :string)
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 %sqlite3::int64))

(cffi:defcfun ("sqlite3_uri_key" %sqlite3::uri-key)
    :string
  (%sqlite3::z-filename :string)
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_uri_parameter" %sqlite3::uri-parameter)
    :string
  (%sqlite3::z-filename :string)
  (%sqlite3::z-param :string))

(cffi:defcfun ("sqlite3_user_data" %sqlite3::user-data)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_value_blob" %sqlite3::value-blob)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_bytes" %sqlite3::value-bytes)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_bytes16" %sqlite3::value-bytes16)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_double" %sqlite3::value-double)
    :double
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_dup" %sqlite3::value-dup)
    (:pointer %sqlite3::value)
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_free" %sqlite3::value-free)
    :void
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_frombind" %sqlite3::value-frombind)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_int" %sqlite3::value-int)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_int64" %sqlite3::value-int64)
    %sqlite3::int64
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_nochange" %sqlite3::value-nochange)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_numeric_type" %sqlite3::value-numeric-type)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_pointer" %sqlite3::value-pointer)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::value))
  (%sqlite3::arg1 :string))

(cffi:defcfun ("sqlite3_value_subtype" %sqlite3::value-subtype)
    :unsigned-int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_text" %sqlite3::value-text)
    (:pointer :unsigned-char)
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_text16" %sqlite3::value-text16)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_text16be" %sqlite3::value-text16be)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_text16le" %sqlite3::value-text16le)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcfun ("sqlite3_value_type" %sqlite3::value-type)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::value)))

(cffi:defcstruct (%sqlite3::vfs :size 168))

(cffi:defctype %sqlite3::vfs (:struct %sqlite3::vfs))

(cffi:defcstruct (%sqlite3::vfs :size 168)
  (%sqlite3::i-version :int :offset 0)
  (%sqlite3::sz-os-file :int :offset 4)
  (%sqlite3::mx-pathname :int :offset 8)
  (%sqlite3::p-next (:pointer %sqlite3::vfs) :offset 16)
  (%sqlite3::z-name :string :offset 24)
  (%sqlite3::p-app-data (:pointer :void) :offset 32)
  (%sqlite3::x-open (:pointer :void) :offset 40)
  (%sqlite3::x-delete (:pointer :void) :offset 48)
  (%sqlite3::x-access (:pointer :void) :offset 56)
  (%sqlite3::x-full-pathname (:pointer :void) :offset 64)
  (%sqlite3::x-dl-open (:pointer :void) :offset 72)
  (%sqlite3::x-dl-error (:pointer :void) :offset 80)
  (%sqlite3::x-dl-sym (:pointer :void) :offset 88)
  (%sqlite3::x-dl-close (:pointer :void) :offset 96)
  (%sqlite3::x-randomness (:pointer :void) :offset 104)
  (%sqlite3::x-sleep (:pointer :void) :offset 112)
  (%sqlite3::x-current-time (:pointer :void) :offset 120)
  (%sqlite3::x-get-last-error (:pointer :void) :offset 128)
  (%sqlite3::x-current-time-int64 (:pointer :void) :offset 136)
  (%sqlite3::x-set-system-call (:pointer :void) :offset 144)
  (%sqlite3::x-get-system-call (:pointer :void) :offset 152)
  (%sqlite3::x-next-system-call (:pointer :void) :offset 160))

(cffi:defctype %sqlite3::vfs (:struct %sqlite3::vfs))

(cffi:defcfun ("sqlite3_vfs_find" %sqlite3::vfs-find)
    (:pointer %sqlite3::vfs)
  (%sqlite3::z-vfs-name :string))

(cffi:defcfun ("sqlite3_vfs_register" %sqlite3::vfs-register)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::vfs))
  (%sqlite3::make-dflt :int))

(cffi:defcfun ("sqlite3_vfs_unregister" %sqlite3::vfs-unregister)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::vfs)))

(cffi:defcfun ("sqlite3_vmprintf" %sqlite3::vmprintf)
    :string
  (%sqlite3::arg0 :string)
  (%sqlite3::arg1 %sqlite3::va-list))

(cffi:defcfun ("sqlite3_vsnprintf" %sqlite3::vsnprintf)
    :string
  (%sqlite3::arg0 :int)
  (%sqlite3::arg1 :string)
  (%sqlite3::arg2 :string)
  (%sqlite3::arg3 %sqlite3::va-list))

(cffi:defcstruct (%sqlite3::index-constraint :size 12)
  (%sqlite3::i-column :int :offset 0)
  (%sqlite3::op :unsigned-char :offset 4)
  (%sqlite3::usable :unsigned-char :offset 5)
  (%sqlite3::i-term-offset :int :offset 8))

(cffi:defcstruct (%sqlite3::index-orderby :size 8)
  (%sqlite3::i-column :int :offset 0)
  (%sqlite3::desc :unsigned-char :offset 4))

(cffi:defcstruct (%sqlite3::index-constraint-usage :size 8)
  (%sqlite3::argv-index :int :offset 0)
  (%sqlite3::omit :unsigned-char :offset 4))

(cffi:defcstruct (%sqlite3::index-info :size 96)
  (%sqlite3::n-constraint :int :offset 0)
  (%sqlite3::a-constraint (:pointer (:struct %sqlite3::index-constraint))
   :offset 8)
  (%sqlite3::n-order-by :int :offset 16)
  (%sqlite3::a-order-by (:pointer (:struct %sqlite3::index-orderby)) :offset 24)
  (%sqlite3::a-constraint-usage
   (:pointer (:struct %sqlite3::index-constraint-usage)) :offset 32)
  (%sqlite3::idx-num :int :offset 40)
  (%sqlite3::idx-str :string :offset 48)
  (%sqlite3::need-to-free-idx-str :int :offset 56)
  (%sqlite3::order-by-consumed :int :offset 60)
  (%sqlite3::estimated-cost :double :offset 64)
  (%sqlite3::estimated-rows %sqlite3::int64 :offset 72)
  (%sqlite3::idx-flags :int :offset 80)
  (%sqlite3::col-used %sqlite3::uint64 :offset 88))

(cffi:defctype %sqlite3::index-info (:struct %sqlite3::index-info))

(cffi:defcfun ("sqlite3_vtab_collation" %sqlite3::vtab-collation)
    :string
  (%sqlite3::arg0 (:pointer %sqlite3::index-info))
  (%sqlite3::arg1 :int))

(cffi:defcfun ("sqlite3_vtab_config" %sqlite3::vtab-config)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::op :int)
  &rest)

(cffi:defcfun ("sqlite3_vtab_distinct" %sqlite3::vtab-distinct)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::index-info)))

(cffi:defcfun ("sqlite3_vtab_in" %sqlite3::vtab-in)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::index-info))
  (%sqlite3::i-cons :int)
  (%sqlite3::b-handle :int))

(cffi:defcfun ("sqlite3_vtab_in_first" %sqlite3::vtab-in-first)
    :int
  (%sqlite3::p-val (:pointer %sqlite3::value))
  (%sqlite3::pp-out (:pointer (:pointer %sqlite3::value))))

(cffi:defcfun ("sqlite3_vtab_in_next" %sqlite3::vtab-in-next)
    :int
  (%sqlite3::p-val (:pointer %sqlite3::value))
  (%sqlite3::pp-out (:pointer (:pointer %sqlite3::value))))

(cffi:defcfun ("sqlite3_vtab_nochange" %sqlite3::vtab-nochange)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::context)))

(cffi:defcfun ("sqlite3_vtab_on_conflict" %sqlite3::vtab-on-conflict)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3)))

(cffi:defcfun ("sqlite3_vtab_rhs_value" %sqlite3::vtab-rhs-value)
    :int
  (%sqlite3::arg0 (:pointer %sqlite3::index-info))
  (%sqlite3::arg1 :int)
  (%sqlite3::pp-val (:pointer (:pointer %sqlite3::value))))

(cffi:defcfun ("sqlite3_wal_autocheckpoint" %sqlite3::wal-autocheckpoint)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::n :int))

(cffi:defcfun ("sqlite3_wal_checkpoint" %sqlite3::wal-checkpoint)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db :string))

(cffi:defcfun ("sqlite3_wal_checkpoint_v2" %sqlite3::wal-checkpoint-v2)
    :int
  (%sqlite3::db (:pointer %sqlite3::sqlite3))
  (%sqlite3::z-db :string)
  (%sqlite3::e-mode :int)
  (%sqlite3::pn-log (:pointer :int))
  (%sqlite3::pn-ckpt (:pointer :int)))

(cffi:defcfun ("sqlite3_wal_hook" %sqlite3::wal-hook)
    (:pointer :void)
  (%sqlite3::arg0 (:pointer %sqlite3::sqlite3))
  (%sqlite3::arg1 (:pointer :void))
  (%sqlite3::arg2 (:pointer :void)))

(cffi:defcfun ("sqlite3_win32_set_directory" %sqlite3::win32-set-directory)
    :int
  (%sqlite3::type :unsigned-long)
  (%sqlite3::z-value (:pointer :void)))

(cffi:defcfun ("sqlite3_win32_set_directory16" %sqlite3::win32-set-directory16)
    :int
  (%sqlite3::type :unsigned-long)
  (%sqlite3::z-value (:pointer :void)))

(cffi:defcfun ("sqlite3_win32_set_directory8" %sqlite3::win32-set-directory8)
    :int
  (%sqlite3::type :unsigned-long)
  (%sqlite3::z-value :string))

(cffi:defcstruct (%sqlite3::%%va-list-tag :size 24)
  (%sqlite3::gp-offset :unsigned-int :offset 0)
  (%sqlite3::fp-offset :unsigned-int :offset 4)
  (%sqlite3::overflow-arg-area (:pointer :void) :offset 8)
  (%sqlite3::reg-save-area (:pointer :void) :offset 16))

(cffi:defcstruct (%sqlite3::api-routines :size 0))

(cffi:defcstruct (%sqlite3::mem-methods :size 64)
  (%sqlite3::x-malloc (:pointer :void) :offset 0)
  (%sqlite3::x-free (:pointer :void) :offset 8)
  (%sqlite3::x-realloc (:pointer :void) :offset 16)
  (%sqlite3::x-size (:pointer :void) :offset 24)
  (%sqlite3::x-roundup (:pointer :void) :offset 32)
  (%sqlite3::x-init (:pointer :void) :offset 40)
  (%sqlite3::x-shutdown (:pointer :void) :offset 48)
  (%sqlite3::p-app-data (:pointer :void) :offset 56))

(cffi:defcstruct (%sqlite3::mutex-methods :size 72)
  (%sqlite3::x-mutex-init (:pointer :void) :offset 0)
  (%sqlite3::x-mutex-end (:pointer :void) :offset 8)
  (%sqlite3::x-mutex-alloc (:pointer :void) :offset 16)
  (%sqlite3::x-mutex-free (:pointer :void) :offset 24)
  (%sqlite3::x-mutex-enter (:pointer :void) :offset 32)
  (%sqlite3::x-mutex-try (:pointer :void) :offset 40)
  (%sqlite3::x-mutex-leave (:pointer :void) :offset 48)
  (%sqlite3::x-mutex-held (:pointer :void) :offset 56)
  (%sqlite3::x-mutex-notheld (:pointer :void) :offset 64))

(cffi:defcstruct (%sqlite3::pcache :size 0))

(cffi:defcstruct (%sqlite3::pcache-methods :size 88)
  (%sqlite3::p-arg (:pointer :void) :offset 0)
  (%sqlite3::x-init (:pointer :void) :offset 8)
  (%sqlite3::x-shutdown (:pointer :void) :offset 16)
  (%sqlite3::x-create (:pointer :void) :offset 24)
  (%sqlite3::x-cachesize (:pointer :void) :offset 32)
  (%sqlite3::x-pagecount (:pointer :void) :offset 40)
  (%sqlite3::x-fetch (:pointer :void) :offset 48)
  (%sqlite3::x-unpin (:pointer :void) :offset 56)
  (%sqlite3::x-rekey (:pointer :void) :offset 64)
  (%sqlite3::x-truncate (:pointer :void) :offset 72)
  (%sqlite3::x-destroy (:pointer :void) :offset 80))

(cffi:defcstruct (%sqlite3::pcache-methods2 :size 104)
  (%sqlite3::i-version :int :offset 0)
  (%sqlite3::p-arg (:pointer :void) :offset 8)
  (%sqlite3::x-init (:pointer :void) :offset 16)
  (%sqlite3::x-shutdown (:pointer :void) :offset 24)
  (%sqlite3::x-create (:pointer :void) :offset 32)
  (%sqlite3::x-cachesize (:pointer :void) :offset 40)
  (%sqlite3::x-pagecount (:pointer :void) :offset 48)
  (%sqlite3::x-fetch (:pointer :void) :offset 56)
  (%sqlite3::x-unpin (:pointer :void) :offset 64)
  (%sqlite3::x-rekey (:pointer :void) :offset 72)
  (%sqlite3::x-truncate (:pointer :void) :offset 80)
  (%sqlite3::x-destroy (:pointer :void) :offset 88)
  (%sqlite3::x-shrink (:pointer :void) :offset 96))

(cffi:defcstruct (%sqlite3::pcache-page :size 16)
  (%sqlite3::p-buf (:pointer :void) :offset 0)
  (%sqlite3::p-extra (:pointer :void) :offset 8))

(cffi:defctype %sqlite3::rtree-dbl :double)

(cffi:defcstruct (%sqlite3::rtree-geometry :size 40)
  (%sqlite3::p-context (:pointer :void) :offset 0)
  (%sqlite3::n-param :int :offset 8)
  (%sqlite3::a-param (:pointer %sqlite3::rtree-dbl) :offset 16)
  (%sqlite3::p-user (:pointer :void) :offset 24)
  (%sqlite3::x-del-user (:pointer :void) :offset 32))

(cffi:defcstruct (%sqlite3::rtree-query-info :size 112)
  (%sqlite3::p-context (:pointer :void) :offset 0)
  (%sqlite3::n-param :int :offset 8)
  (%sqlite3::a-param (:pointer %sqlite3::rtree-dbl) :offset 16)
  (%sqlite3::p-user (:pointer :void) :offset 24)
  (%sqlite3::x-del-user (:pointer :void) :offset 32)
  (%sqlite3::a-coord (:pointer %sqlite3::rtree-dbl) :offset 40)
  (%sqlite3::an-queue (:pointer :unsigned-int) :offset 48)
  (%sqlite3::n-coord :int :offset 56)
  (%sqlite3::i-level :int :offset 60)
  (%sqlite3::mx-level :int :offset 64)
  (%sqlite3::i-rowid %sqlite3::int64 :offset 72)
  (%sqlite3::r-parent-score %sqlite3::rtree-dbl :offset 80)
  (%sqlite3::e-parent-within :int :offset 88)
  (%sqlite3::e-within :int :offset 92)
  (%sqlite3::r-score %sqlite3::rtree-dbl :offset 96)
  (%sqlite3::ap-sql-param (:pointer (:pointer %sqlite3::value)) :offset 104))

(cffi:defcstruct (%sqlite3::vtab :size 24)
  (%sqlite3::p-module (:pointer %sqlite3::module) :offset 0)
  (%sqlite3::n-ref :int :offset 8)
  (%sqlite3::z-err-msg :string :offset 16))

(cffi:defctype %sqlite3::vtab (:struct %sqlite3::vtab))

(cffi:defcstruct (%sqlite3::vtab-cursor :size 8)
  (%sqlite3::p-vtab (:pointer %sqlite3::vtab) :offset 0))

(define-symbol-macro %sqlite3::*data-directory*
                     (let ((%sqlite3::ptr
                            (cffi:foreign-symbol-pointer
                             "sqlite3_data_directory")))
                       (when %sqlite3::ptr
                         (cffi:mem-ref %sqlite3::ptr ':string))))

(define-symbol-macro %sqlite3::*temp-directory*
                     (let ((%sqlite3::ptr
                            (cffi:foreign-symbol-pointer
                             "sqlite3_temp_directory")))
                       (when %sqlite3::ptr
                         (cffi:mem-ref %sqlite3::ptr ':string))))

(define-symbol-macro %sqlite3::*version*
                     (cffi:foreign-symbol-pointer "sqlite3_version"))

(cffi:defctype %sqlite3::api-routines (:struct %sqlite3::api-routines))

(cffi:defctype %sqlite3::callback (:pointer :void))

(cffi:defctype %sqlite3::destructor-type (:pointer :void))

(cffi:defctype %sqlite3::io-methods (:struct %sqlite3::io-methods))

(cffi:defctype %sqlite3::mem-methods (:struct %sqlite3::mem-methods))

(cffi:defctype %sqlite3::mutex-methods (:struct %sqlite3::mutex-methods))

(cffi:defctype %sqlite3::pcache (:struct %sqlite3::pcache))

(cffi:defctype %sqlite3::pcache-methods (:struct %sqlite3::pcache-methods))

(cffi:defctype %sqlite3::pcache-methods2 (:struct %sqlite3::pcache-methods2))

(cffi:defctype %sqlite3::pcache-page (:struct %sqlite3::pcache-page))

(cffi:defctype %sqlite3::rtree-geometry (:struct %sqlite3::rtree-geometry))

(cffi:defctype %sqlite3::rtree-query-info (:struct %sqlite3::rtree-query-info))

(cffi:defctype %sqlite3::syscall-ptr (:pointer :void))

(cffi:defctype %sqlite3::vtab-cursor (:struct %sqlite3::vtab-cursor))

(eval-when (:load-toplevel :compile-toplevel :execute)
  (export '%sqlite3::+sqlite3-text+ :%sqlite3)
  (export '%sqlite3::+abort+ :%sqlite3)
  (export '%sqlite3::+abort-rollback+ :%sqlite3)
  (export '%sqlite3::+access-exists+ :%sqlite3)
  (export '%sqlite3::+access-read+ :%sqlite3)
  (export '%sqlite3::+access-readwrite+ :%sqlite3)
  (export '%sqlite3::+alter-table+ :%sqlite3)
  (export '%sqlite3::+analyze+ :%sqlite3)
  (export '%sqlite3::+any+ :%sqlite3)
  (export '%sqlite3::+attach+ :%sqlite3)
  (export '%sqlite3::+auth+ :%sqlite3)
  (export '%sqlite3::+auth-user+ :%sqlite3)
  (export '%sqlite3::+blob+ :%sqlite3)
  (export '%sqlite3::+busy+ :%sqlite3)
  (export '%sqlite3::+busy-recovery+ :%sqlite3)
  (export '%sqlite3::+busy-snapshot+ :%sqlite3)
  (export '%sqlite3::+busy-timeout+ :%sqlite3)
  (export '%sqlite3::+cantopen+ :%sqlite3)
  (export '%sqlite3::+cantopen-convpath+ :%sqlite3)
  (export '%sqlite3::+cantopen-dirtywal+ :%sqlite3)
  (export '%sqlite3::+cantopen-fullpath+ :%sqlite3)
  (export '%sqlite3::+cantopen-isdir+ :%sqlite3)
  (export '%sqlite3::+cantopen-notempdir+ :%sqlite3)
  (export '%sqlite3::+cantopen-symlink+ :%sqlite3)
  (export '%sqlite3::+checkpoint-full+ :%sqlite3)
  (export '%sqlite3::+checkpoint-passive+ :%sqlite3)
  (export '%sqlite3::+checkpoint-restart+ :%sqlite3)
  (export '%sqlite3::+checkpoint-truncate+ :%sqlite3)
  (export '%sqlite3::+config-covering-index-scan+ :%sqlite3)
  (export '%sqlite3::+config-getmalloc+ :%sqlite3)
  (export '%sqlite3::+config-getmutex+ :%sqlite3)
  (export '%sqlite3::+config-getpcache+ :%sqlite3)
  (export '%sqlite3::+config-getpcache2+ :%sqlite3)
  (export '%sqlite3::+config-heap+ :%sqlite3)
  (export '%sqlite3::+config-log+ :%sqlite3)
  (export '%sqlite3::+config-lookaside+ :%sqlite3)
  (export '%sqlite3::+config-malloc+ :%sqlite3)
  (export '%sqlite3::+config-memdb-maxsize+ :%sqlite3)
  (export '%sqlite3::+config-memstatus+ :%sqlite3)
  (export '%sqlite3::+config-mmap-size+ :%sqlite3)
  (export '%sqlite3::+config-multithread+ :%sqlite3)
  (export '%sqlite3::+config-mutex+ :%sqlite3)
  (export '%sqlite3::+config-pagecache+ :%sqlite3)
  (export '%sqlite3::+config-pcache+ :%sqlite3)
  (export '%sqlite3::+config-pcache2+ :%sqlite3)
  (export '%sqlite3::+config-pcache-hdrsz+ :%sqlite3)
  (export '%sqlite3::+config-pmasz+ :%sqlite3)
  (export '%sqlite3::+config-scratch+ :%sqlite3)
  (export '%sqlite3::+config-serialized+ :%sqlite3)
  (export '%sqlite3::+config-singlethread+ :%sqlite3)
  (export '%sqlite3::+config-small-malloc+ :%sqlite3)
  (export '%sqlite3::+config-sorterref-size+ :%sqlite3)
  (export '%sqlite3::+config-sqllog+ :%sqlite3)
  (export '%sqlite3::+config-stmtjrnl-spill+ :%sqlite3)
  (export '%sqlite3::+config-uri+ :%sqlite3)
  (export '%sqlite3::+config-win32-heapsize+ :%sqlite3)
  (export '%sqlite3::+constraint+ :%sqlite3)
  (export '%sqlite3::+constraint-check+ :%sqlite3)
  (export '%sqlite3::+constraint-commithook+ :%sqlite3)
  (export '%sqlite3::+constraint-datatype+ :%sqlite3)
  (export '%sqlite3::+constraint-foreignkey+ :%sqlite3)
  (export '%sqlite3::+constraint-function+ :%sqlite3)
  (export '%sqlite3::+constraint-notnull+ :%sqlite3)
  (export '%sqlite3::+constraint-pinned+ :%sqlite3)
  (export '%sqlite3::+constraint-primarykey+ :%sqlite3)
  (export '%sqlite3::+constraint-rowid+ :%sqlite3)
  (export '%sqlite3::+constraint-trigger+ :%sqlite3)
  (export '%sqlite3::+constraint-unique+ :%sqlite3)
  (export '%sqlite3::+constraint-vtab+ :%sqlite3)
  (export '%sqlite3::+copy+ :%sqlite3)
  (export '%sqlite3::+corrupt+ :%sqlite3)
  (export '%sqlite3::+corrupt-index+ :%sqlite3)
  (export '%sqlite3::+corrupt-sequence+ :%sqlite3)
  (export '%sqlite3::+corrupt-vtab+ :%sqlite3)
  (export '%sqlite3::+create-index+ :%sqlite3)
  (export '%sqlite3::+create-table+ :%sqlite3)
  (export '%sqlite3::+create-temp-index+ :%sqlite3)
  (export '%sqlite3::+create-temp-table+ :%sqlite3)
  (export '%sqlite3::+create-temp-trigger+ :%sqlite3)
  (export '%sqlite3::+create-temp-view+ :%sqlite3)
  (export '%sqlite3::+create-trigger+ :%sqlite3)
  (export '%sqlite3::+create-view+ :%sqlite3)
  (export '%sqlite3::+create-vtable+ :%sqlite3)
  (export '%sqlite3::+dbconfig-defensive+ :%sqlite3)
  (export '%sqlite3::+dbconfig-dqs-ddl+ :%sqlite3)
  (export '%sqlite3::+dbconfig-dqs-dml+ :%sqlite3)
  (export '%sqlite3::+dbconfig-enable-fkey+ :%sqlite3)
  (export '%sqlite3::+dbconfig-enable-fts3-tokenizer+ :%sqlite3)
  (export '%sqlite3::+dbconfig-enable-load-extension+ :%sqlite3)
  (export '%sqlite3::+dbconfig-enable-qpsg+ :%sqlite3)
  (export '%sqlite3::+dbconfig-enable-trigger+ :%sqlite3)
  (export '%sqlite3::+dbconfig-enable-view+ :%sqlite3)
  (export '%sqlite3::+dbconfig-legacy-alter-table+ :%sqlite3)
  (export '%sqlite3::+dbconfig-legacy-file-format+ :%sqlite3)
  (export '%sqlite3::+dbconfig-lookaside+ :%sqlite3)
  (export '%sqlite3::+dbconfig-maindbname+ :%sqlite3)
  (export '%sqlite3::+dbconfig-max+ :%sqlite3)
  (export '%sqlite3::+dbconfig-no-ckpt-on-close+ :%sqlite3)
  (export '%sqlite3::+dbconfig-reset-database+ :%sqlite3)
  (export '%sqlite3::+dbconfig-trigger-eqp+ :%sqlite3)
  (export '%sqlite3::+dbconfig-trusted-schema+ :%sqlite3)
  (export '%sqlite3::+dbconfig-writable-schema+ :%sqlite3)
  (export '%sqlite3::+dbstatus-cache-hit+ :%sqlite3)
  (export '%sqlite3::+dbstatus-cache-miss+ :%sqlite3)
  (export '%sqlite3::+dbstatus-cache-spill+ :%sqlite3)
  (export '%sqlite3::+dbstatus-cache-used+ :%sqlite3)
  (export '%sqlite3::+dbstatus-cache-used-shared+ :%sqlite3)
  (export '%sqlite3::+dbstatus-cache-write+ :%sqlite3)
  (export '%sqlite3::+dbstatus-deferred-fks+ :%sqlite3)
  (export '%sqlite3::+dbstatus-lookaside-hit+ :%sqlite3)
  (export '%sqlite3::+dbstatus-lookaside-miss-full+ :%sqlite3)
  (export '%sqlite3::+dbstatus-lookaside-miss-size+ :%sqlite3)
  (export '%sqlite3::+dbstatus-lookaside-used+ :%sqlite3)
  (export '%sqlite3::+dbstatus-max+ :%sqlite3)
  (export '%sqlite3::+dbstatus-schema-used+ :%sqlite3)
  (export '%sqlite3::+dbstatus-stmt-used+ :%sqlite3)
  (export '%sqlite3::+delete+ :%sqlite3)
  (export '%sqlite3::+deny+ :%sqlite3)
  (export '%sqlite3::+deserialize-freeonclose+ :%sqlite3)
  (export '%sqlite3::+deserialize-readonly+ :%sqlite3)
  (export '%sqlite3::+deserialize-resizeable+ :%sqlite3)
  (export '%sqlite3::+detach+ :%sqlite3)
  (export '%sqlite3::+deterministic+ :%sqlite3)
  (export '%sqlite3::+directonly+ :%sqlite3)
  (export '%sqlite3::+done+ :%sqlite3)
  (export '%sqlite3::+drop-index+ :%sqlite3)
  (export '%sqlite3::+drop-table+ :%sqlite3)
  (export '%sqlite3::+drop-temp-index+ :%sqlite3)
  (export '%sqlite3::+drop-temp-table+ :%sqlite3)
  (export '%sqlite3::+drop-temp-trigger+ :%sqlite3)
  (export '%sqlite3::+drop-temp-view+ :%sqlite3)
  (export '%sqlite3::+drop-trigger+ :%sqlite3)
  (export '%sqlite3::+drop-view+ :%sqlite3)
  (export '%sqlite3::+drop-vtable+ :%sqlite3)
  (export '%sqlite3::+empty+ :%sqlite3)
  (export '%sqlite3::+error+ :%sqlite3)
  (export '%sqlite3::+error-missing-collseq+ :%sqlite3)
  (export '%sqlite3::+error-retry+ :%sqlite3)
  (export '%sqlite3::+error-snapshot+ :%sqlite3)
  (export '%sqlite3::+fail+ :%sqlite3)
  (export '%sqlite3::+fcntl-begin-atomic-write+ :%sqlite3)
  (export '%sqlite3::+fcntl-busyhandler+ :%sqlite3)
  (export '%sqlite3::+fcntl-chunk-size+ :%sqlite3)
  (export '%sqlite3::+fcntl-ckpt-done+ :%sqlite3)
  (export '%sqlite3::+fcntl-ckpt-start+ :%sqlite3)
  (export '%sqlite3::+fcntl-cksm-file+ :%sqlite3)
  (export '%sqlite3::+fcntl-commit-atomic-write+ :%sqlite3)
  (export '%sqlite3::+fcntl-commit-phasetwo+ :%sqlite3)
  (export '%sqlite3::+fcntl-data-version+ :%sqlite3)
  (export '%sqlite3::+fcntl-external-reader+ :%sqlite3)
  (export '%sqlite3::+fcntl-file-pointer+ :%sqlite3)
  (export '%sqlite3::+fcntl-get-lockproxyfile+ :%sqlite3)
  (export '%sqlite3::+fcntl-has-moved+ :%sqlite3)
  (export '%sqlite3::+fcntl-journal-pointer+ :%sqlite3)
  (export '%sqlite3::+fcntl-last-errno+ :%sqlite3)
  (export '%sqlite3::+fcntl-lockstate+ :%sqlite3)
  (export '%sqlite3::+fcntl-lock-timeout+ :%sqlite3)
  (export '%sqlite3::+fcntl-mmap-size+ :%sqlite3)
  (export '%sqlite3::+fcntl-overwrite+ :%sqlite3)
  (export '%sqlite3::+fcntl-pdb+ :%sqlite3)
  (export '%sqlite3::+fcntl-persist-wal+ :%sqlite3)
  (export '%sqlite3::+fcntl-powersafe-overwrite+ :%sqlite3)
  (export '%sqlite3::+fcntl-pragma+ :%sqlite3)
  (export '%sqlite3::+fcntl-rbu+ :%sqlite3)
  (export '%sqlite3::+fcntl-reserve-bytes+ :%sqlite3)
  (export '%sqlite3::+fcntl-rollback-atomic-write+ :%sqlite3)
  (export '%sqlite3::+fcntl-set-lockproxyfile+ :%sqlite3)
  (export '%sqlite3::+fcntl-size-hint+ :%sqlite3)
  (export '%sqlite3::+fcntl-size-limit+ :%sqlite3)
  (export '%sqlite3::+fcntl-sync+ :%sqlite3)
  (export '%sqlite3::+fcntl-sync-omitted+ :%sqlite3)
  (export '%sqlite3::+fcntl-tempfilename+ :%sqlite3)
  (export '%sqlite3::+fcntl-trace+ :%sqlite3)
  (export '%sqlite3::+fcntl-vfsname+ :%sqlite3)
  (export '%sqlite3::+fcntl-vfs-pointer+ :%sqlite3)
  (export '%sqlite3::+fcntl-wal-block+ :%sqlite3)
  (export '%sqlite3::+fcntl-win32-av-retry+ :%sqlite3)
  (export '%sqlite3::+fcntl-win32-get-handle+ :%sqlite3)
  (export '%sqlite3::+fcntl-win32-set-handle+ :%sqlite3)
  (export '%sqlite3::+fcntl-zipvfs+ :%sqlite3)
  (export '%sqlite3::+float+ :%sqlite3)
  (export '%sqlite3::+format+ :%sqlite3)
  (export '%sqlite3::+full+ :%sqlite3)
  (export '%sqlite3::+function+ :%sqlite3)
  (export '%sqlite3::+get-lockproxyfile+ :%sqlite3)
  (export '%sqlite3::+ignore+ :%sqlite3)
  (export '%sqlite3::+index-constraint-eq+ :%sqlite3)
  (export '%sqlite3::+index-constraint-function+ :%sqlite3)
  (export '%sqlite3::+index-constraint-ge+ :%sqlite3)
  (export '%sqlite3::+index-constraint-glob+ :%sqlite3)
  (export '%sqlite3::+index-constraint-gt+ :%sqlite3)
  (export '%sqlite3::+index-constraint-is+ :%sqlite3)
  (export '%sqlite3::+index-constraint-isnot+ :%sqlite3)
  (export '%sqlite3::+index-constraint-isnotnull+ :%sqlite3)
  (export '%sqlite3::+index-constraint-isnull+ :%sqlite3)
  (export '%sqlite3::+index-constraint-le+ :%sqlite3)
  (export '%sqlite3::+index-constraint-like+ :%sqlite3)
  (export '%sqlite3::+index-constraint-limit+ :%sqlite3)
  (export '%sqlite3::+index-constraint-lt+ :%sqlite3)
  (export '%sqlite3::+index-constraint-match+ :%sqlite3)
  (export '%sqlite3::+index-constraint-ne+ :%sqlite3)
  (export '%sqlite3::+index-constraint-offset+ :%sqlite3)
  (export '%sqlite3::+index-constraint-regexp+ :%sqlite3)
  (export '%sqlite3::+index-scan-unique+ :%sqlite3)
  (export '%sqlite3::+innocuous+ :%sqlite3)
  (export '%sqlite3::+insert+ :%sqlite3)
  (export '%sqlite3::+integer+ :%sqlite3)
  (export '%sqlite3::+internal+ :%sqlite3)
  (export '%sqlite3::+interrupt+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic16k+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic1k+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic2k+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic32k+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic4k+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic512+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic64k+ :%sqlite3)
  (export '%sqlite3::+iocap-atomic8k+ :%sqlite3)
  (export '%sqlite3::+iocap-batch-atomic+ :%sqlite3)
  (export '%sqlite3::+iocap-immutable+ :%sqlite3)
  (export '%sqlite3::+iocap-powersafe-overwrite+ :%sqlite3)
  (export '%sqlite3::+iocap-safe-append+ :%sqlite3)
  (export '%sqlite3::+iocap-sequential+ :%sqlite3)
  (export '%sqlite3::+iocap-undeletable-when-open+ :%sqlite3)
  (export '%sqlite3::+ioerr+ :%sqlite3)
  (export '%sqlite3::+ioerr-access+ :%sqlite3)
  (export '%sqlite3::+ioerr-auth+ :%sqlite3)
  (export '%sqlite3::+ioerr-begin-atomic+ :%sqlite3)
  (export '%sqlite3::+ioerr-blocked+ :%sqlite3)
  (export '%sqlite3::+ioerr-checkreservedlock+ :%sqlite3)
  (export '%sqlite3::+ioerr-close+ :%sqlite3)
  (export '%sqlite3::+ioerr-commit-atomic+ :%sqlite3)
  (export '%sqlite3::+ioerr-convpath+ :%sqlite3)
  (export '%sqlite3::+ioerr-corruptfs+ :%sqlite3)
  (export '%sqlite3::+ioerr-data+ :%sqlite3)
  (export '%sqlite3::+ioerr-delete+ :%sqlite3)
  (export '%sqlite3::+ioerr-delete-noent+ :%sqlite3)
  (export '%sqlite3::+ioerr-dir-close+ :%sqlite3)
  (export '%sqlite3::+ioerr-dir-fsync+ :%sqlite3)
  (export '%sqlite3::+ioerr-fstat+ :%sqlite3)
  (export '%sqlite3::+ioerr-fsync+ :%sqlite3)
  (export '%sqlite3::+ioerr-gettemppath+ :%sqlite3)
  (export '%sqlite3::+ioerr-lock+ :%sqlite3)
  (export '%sqlite3::+ioerr-mmap+ :%sqlite3)
  (export '%sqlite3::+ioerr-nomem+ :%sqlite3)
  (export '%sqlite3::+ioerr-rdlock+ :%sqlite3)
  (export '%sqlite3::+ioerr-read+ :%sqlite3)
  (export '%sqlite3::+ioerr-rollback-atomic+ :%sqlite3)
  (export '%sqlite3::+ioerr-seek+ :%sqlite3)
  (export '%sqlite3::+ioerr-shmlock+ :%sqlite3)
  (export '%sqlite3::+ioerr-shmmap+ :%sqlite3)
  (export '%sqlite3::+ioerr-shmopen+ :%sqlite3)
  (export '%sqlite3::+ioerr-shmsize+ :%sqlite3)
  (export '%sqlite3::+ioerr-short-read+ :%sqlite3)
  (export '%sqlite3::+ioerr-truncate+ :%sqlite3)
  (export '%sqlite3::+ioerr-unlock+ :%sqlite3)
  (export '%sqlite3::+ioerr-vnode+ :%sqlite3)
  (export '%sqlite3::+ioerr-write+ :%sqlite3)
  (export '%sqlite3::+last-errno+ :%sqlite3)
  (export '%sqlite3::+limit-attached+ :%sqlite3)
  (export '%sqlite3::+limit-column+ :%sqlite3)
  (export '%sqlite3::+limit-compound-select+ :%sqlite3)
  (export '%sqlite3::+limit-expr-depth+ :%sqlite3)
  (export '%sqlite3::+limit-function-arg+ :%sqlite3)
  (export '%sqlite3::+limit-length+ :%sqlite3)
  (export '%sqlite3::+limit-like-pattern-length+ :%sqlite3)
  (export '%sqlite3::+limit-sql-length+ :%sqlite3)
  (export '%sqlite3::+limit-trigger-depth+ :%sqlite3)
  (export '%sqlite3::+limit-variable-number+ :%sqlite3)
  (export '%sqlite3::+limit-vdbe-op+ :%sqlite3)
  (export '%sqlite3::+limit-worker-threads+ :%sqlite3)
  (export '%sqlite3::+locked+ :%sqlite3)
  (export '%sqlite3::+locked-sharedcache+ :%sqlite3)
  (export '%sqlite3::+locked-vtab+ :%sqlite3)
  (export '%sqlite3::+lock-exclusive+ :%sqlite3)
  (export '%sqlite3::+lock-none+ :%sqlite3)
  (export '%sqlite3::+lock-pending+ :%sqlite3)
  (export '%sqlite3::+lock-reserved+ :%sqlite3)
  (export '%sqlite3::+lock-shared+ :%sqlite3)
  (export '%sqlite3::+mismatch+ :%sqlite3)
  (export '%sqlite3::+misuse+ :%sqlite3)
  (export '%sqlite3::+mutex-fast+ :%sqlite3)
  (export '%sqlite3::+mutex-recursive+ :%sqlite3)
  (export '%sqlite3::+mutex-static-app1+ :%sqlite3)
  (export '%sqlite3::+mutex-static-app2+ :%sqlite3)
  (export '%sqlite3::+mutex-static-app3+ :%sqlite3)
  (export '%sqlite3::+mutex-static-lru+ :%sqlite3)
  (export '%sqlite3::+mutex-static-lru2+ :%sqlite3)
  (export '%sqlite3::+mutex-static-main+ :%sqlite3)
  (export '%sqlite3::+mutex-static-master+ :%sqlite3)
  (export '%sqlite3::+mutex-static-mem+ :%sqlite3)
  (export '%sqlite3::+mutex-static-mem2+ :%sqlite3)
  (export '%sqlite3::+mutex-static-open+ :%sqlite3)
  (export '%sqlite3::+mutex-static-pmem+ :%sqlite3)
  (export '%sqlite3::+mutex-static-prng+ :%sqlite3)
  (export '%sqlite3::+mutex-static-vfs1+ :%sqlite3)
  (export '%sqlite3::+mutex-static-vfs2+ :%sqlite3)
  (export '%sqlite3::+mutex-static-vfs3+ :%sqlite3)
  (export '%sqlite3::+nolfs+ :%sqlite3)
  (export '%sqlite3::+nomem+ :%sqlite3)
  (export '%sqlite3::+notadb+ :%sqlite3)
  (export '%sqlite3::+notfound+ :%sqlite3)
  (export '%sqlite3::+notice+ :%sqlite3)
  (export '%sqlite3::+notice-recover-rollback+ :%sqlite3)
  (export '%sqlite3::+notice-recover-wal+ :%sqlite3)
  (export '%sqlite3::+null+ :%sqlite3)
  (export '%sqlite3::+ok+ :%sqlite3)
  (export '%sqlite3::+ok-load-permanently+ :%sqlite3)
  (export '%sqlite3::+ok-symlink+ :%sqlite3)
  (export '%sqlite3::+open-autoproxy+ :%sqlite3)
  (export '%sqlite3::+open-create+ :%sqlite3)
  (export '%sqlite3::+open-deleteonclose+ :%sqlite3)
  (export '%sqlite3::+open-exclusive+ :%sqlite3)
  (export '%sqlite3::+open-exrescode+ :%sqlite3)
  (export '%sqlite3::+open-fullmutex+ :%sqlite3)
  (export '%sqlite3::+open-main-db+ :%sqlite3)
  (export '%sqlite3::+open-main-journal+ :%sqlite3)
  (export '%sqlite3::+open-master-journal+ :%sqlite3)
  (export '%sqlite3::+open-memory+ :%sqlite3)
  (export '%sqlite3::+open-nofollow+ :%sqlite3)
  (export '%sqlite3::+open-nomutex+ :%sqlite3)
  (export '%sqlite3::+open-privatecache+ :%sqlite3)
  (export '%sqlite3::+open-readonly+ :%sqlite3)
  (export '%sqlite3::+open-readwrite+ :%sqlite3)
  (export '%sqlite3::+open-sharedcache+ :%sqlite3)
  (export '%sqlite3::+open-subjournal+ :%sqlite3)
  (export '%sqlite3::+open-super-journal+ :%sqlite3)
  (export '%sqlite3::+open-temp-db+ :%sqlite3)
  (export '%sqlite3::+open-temp-journal+ :%sqlite3)
  (export '%sqlite3::+open-transient-db+ :%sqlite3)
  (export '%sqlite3::+open-uri+ :%sqlite3)
  (export '%sqlite3::+open-wal+ :%sqlite3)
  (export '%sqlite3::+perm+ :%sqlite3)
  (export '%sqlite3::+pragma+ :%sqlite3)
  (export '%sqlite3::+prepare-normalize+ :%sqlite3)
  (export '%sqlite3::+prepare-no-vtab+ :%sqlite3)
  (export '%sqlite3::+prepare-persistent+ :%sqlite3)
  (export '%sqlite3::+protocol+ :%sqlite3)
  (export '%sqlite3::+range+ :%sqlite3)
  (export '%sqlite3::+read+ :%sqlite3)
  (export '%sqlite3::+readonly+ :%sqlite3)
  (export '%sqlite3::+readonly-cantinit+ :%sqlite3)
  (export '%sqlite3::+readonly-cantlock+ :%sqlite3)
  (export '%sqlite3::+readonly-dbmoved+ :%sqlite3)
  (export '%sqlite3::+readonly-directory+ :%sqlite3)
  (export '%sqlite3::+readonly-recovery+ :%sqlite3)
  (export '%sqlite3::+readonly-rollback+ :%sqlite3)
  (export '%sqlite3::+recursive+ :%sqlite3)
  (export '%sqlite3::+reindex+ :%sqlite3)
  (export '%sqlite3::+replace+ :%sqlite3)
  (export '%sqlite3::+rollback+ :%sqlite3)
  (export '%sqlite3::+row+ :%sqlite3)
  (export '%sqlite3::+savepoint+ :%sqlite3)
  (export '%sqlite3::+scanstat-est+ :%sqlite3)
  (export '%sqlite3::+scanstat-explain+ :%sqlite3)
  (export '%sqlite3::+scanstat-name+ :%sqlite3)
  (export '%sqlite3::+scanstat-nloop+ :%sqlite3)
  (export '%sqlite3::+scanstat-nvisit+ :%sqlite3)
  (export '%sqlite3::+scanstat-selectid+ :%sqlite3)
  (export '%sqlite3::+schema+ :%sqlite3)
  (export '%sqlite3::+select+ :%sqlite3)
  (export '%sqlite3::+serialize-nocopy+ :%sqlite3)
  (export '%sqlite3::+set-lockproxyfile+ :%sqlite3)
  (export '%sqlite3::+shm-exclusive+ :%sqlite3)
  (export '%sqlite3::+shm-lock+ :%sqlite3)
  (export '%sqlite3::+shm-nlock+ :%sqlite3)
  (export '%sqlite3::+shm-shared+ :%sqlite3)
  (export '%sqlite3::+shm-unlock+ :%sqlite3)
  (export '%sqlite3::+status-malloc-count+ :%sqlite3)
  (export '%sqlite3::+status-malloc-size+ :%sqlite3)
  (export '%sqlite3::+status-memory-used+ :%sqlite3)
  (export '%sqlite3::+status-pagecache-overflow+ :%sqlite3)
  (export '%sqlite3::+status-pagecache-size+ :%sqlite3)
  (export '%sqlite3::+status-pagecache-used+ :%sqlite3)
  (export '%sqlite3::+status-parser-stack+ :%sqlite3)
  (export '%sqlite3::+status-scratch-overflow+ :%sqlite3)
  (export '%sqlite3::+status-scratch-size+ :%sqlite3)
  (export '%sqlite3::+status-scratch-used+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-autoindex+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-filter-hit+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-filter-miss+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-fullscan-step+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-memused+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-reprepare+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-run+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-sort+ :%sqlite3)
  (export '%sqlite3::+stmtstatus-vm-step+ :%sqlite3)
  (export '%sqlite3::+subtype+ :%sqlite3)
  (export '%sqlite3::+sync-dataonly+ :%sqlite3)
  (export '%sqlite3::+sync-full+ :%sqlite3)
  (export '%sqlite3::+sync-normal+ :%sqlite3)
  (export '%sqlite3::+testctrl-always+ :%sqlite3)
  (export '%sqlite3::+testctrl-assert+ :%sqlite3)
  (export '%sqlite3::+testctrl-benign-malloc-hooks+ :%sqlite3)
  (export '%sqlite3::+testctrl-bitvec-test+ :%sqlite3)
  (export '%sqlite3::+testctrl-byteorder+ :%sqlite3)
  (export '%sqlite3::+testctrl-explain-stmt+ :%sqlite3)
  (export '%sqlite3::+testctrl-extra-schema-checks+ :%sqlite3)
  (export '%sqlite3::+testctrl-fault-install+ :%sqlite3)
  (export '%sqlite3::+testctrl-first+ :%sqlite3)
  (export '%sqlite3::+testctrl-imposter+ :%sqlite3)
  (export '%sqlite3::+testctrl-internal-functions+ :%sqlite3)
  (export '%sqlite3::+testctrl-isinit+ :%sqlite3)
  (export '%sqlite3::+testctrl-iskeyword+ :%sqlite3)
  (export '%sqlite3::+testctrl-last+ :%sqlite3)
  (export '%sqlite3::+testctrl-localtime-fault+ :%sqlite3)
  (export '%sqlite3::+testctrl-logest+ :%sqlite3)
  (export '%sqlite3::+testctrl-never-corrupt+ :%sqlite3)
  (export '%sqlite3::+testctrl-once-reset-threshold+ :%sqlite3)
  (export '%sqlite3::+testctrl-optimizations+ :%sqlite3)
  (export '%sqlite3::+testctrl-parser-coverage+ :%sqlite3)
  (export '%sqlite3::+testctrl-pending-byte+ :%sqlite3)
  (export '%sqlite3::+testctrl-prng-reset+ :%sqlite3)
  (export '%sqlite3::+testctrl-prng-restore+ :%sqlite3)
  (export '%sqlite3::+testctrl-prng-save+ :%sqlite3)
  (export '%sqlite3::+testctrl-prng-seed+ :%sqlite3)
  (export '%sqlite3::+testctrl-reserve+ :%sqlite3)
  (export '%sqlite3::+testctrl-result-intreal+ :%sqlite3)
  (export '%sqlite3::+testctrl-scratchmalloc+ :%sqlite3)
  (export '%sqlite3::+testctrl-seek-count+ :%sqlite3)
  (export '%sqlite3::+testctrl-sorter-mmap+ :%sqlite3)
  (export '%sqlite3::+testctrl-traceflags+ :%sqlite3)
  (export '%sqlite3::+testctrl-tune+ :%sqlite3)
  (export '%sqlite3::+testctrl-vdbe-coverage+ :%sqlite3)
  (export '%sqlite3::+text+ :%sqlite3)
  (export '%sqlite3::+toobig+ :%sqlite3)
  (export '%sqlite3::+trace-close+ :%sqlite3)
  (export '%sqlite3::+trace-profile+ :%sqlite3)
  (export '%sqlite3::+trace-row+ :%sqlite3)
  (export '%sqlite3::+trace-stmt+ :%sqlite3)
  (export '%sqlite3::+transaction+ :%sqlite3)
  (export '%sqlite3::+txn-none+ :%sqlite3)
  (export '%sqlite3::+txn-read+ :%sqlite3)
  (export '%sqlite3::+txn-write+ :%sqlite3)
  (export '%sqlite3::+update+ :%sqlite3)
  (export '%sqlite3::+utf16+ :%sqlite3)
  (export '%sqlite3::+utf16be+ :%sqlite3)
  (export '%sqlite3::+utf16le+ :%sqlite3)
  (export '%sqlite3::+utf16-aligned+ :%sqlite3)
  (export '%sqlite3::+utf8+ :%sqlite3)
  (export '%sqlite3::+vtab-constraint-support+ :%sqlite3)
  (export '%sqlite3::+vtab-directonly+ :%sqlite3)
  (export '%sqlite3::+vtab-innocuous+ :%sqlite3)
  (export '%sqlite3::+warning+ :%sqlite3)
  (export '%sqlite3::+warning-autoindex+ :%sqlite3)
  (export '%sqlite3::+win32-data-directory-type+ :%sqlite3)
  (export '%sqlite3::+win32-temp-directory-type+ :%sqlite3)
  (export '%sqlite3::context :%sqlite3)
  (export '%sqlite3::aggregate-context :%sqlite3)
  (export '%sqlite3::aggregate-count :%sqlite3)
  (export '%sqlite3::auto-extension :%sqlite3)
  (export '%sqlite3::sqlite3 :%sqlite3)
  (export '%sqlite3::autovacuum-pages :%sqlite3)
  (export '%sqlite3::backup :%sqlite3)
  (export '%sqlite3::backup-finish :%sqlite3)
  (export '%sqlite3::backup-init :%sqlite3)
  (export '%sqlite3::backup-pagecount :%sqlite3)
  (export '%sqlite3::backup-remaining :%sqlite3)
  (export '%sqlite3::backup-step :%sqlite3)
  (export '%sqlite3::stmt :%sqlite3)
  (export '%sqlite3::bind-blob :%sqlite3)
  (export '%sqlite3::uint64 :%sqlite3)
  (export '%sqlite3::bind-blob64 :%sqlite3)
  (export '%sqlite3::bind-double :%sqlite3)
  (export '%sqlite3::bind-int :%sqlite3)
  (export '%sqlite3::int64 :%sqlite3)
  (export '%sqlite3::bind-int64 :%sqlite3)
  (export '%sqlite3::bind-null :%sqlite3)
  (export '%sqlite3::bind-parameter-count :%sqlite3)
  (export '%sqlite3::bind-parameter-index :%sqlite3)
  (export '%sqlite3::bind-parameter-name :%sqlite3)
  (export '%sqlite3::bind-pointer :%sqlite3)
  (export '%sqlite3::bind-text :%sqlite3)
  (export '%sqlite3::bind-text16 :%sqlite3)
  (export '%sqlite3::bind-text64 :%sqlite3)
  (export '%sqlite3::value :%sqlite3)
  (export '%sqlite3::bind-value :%sqlite3)
  (export '%sqlite3::bind-zeroblob :%sqlite3)
  (export '%sqlite3::bind-zeroblob64 :%sqlite3)
  (export '%sqlite3::blob :%sqlite3)
  (export '%sqlite3::blob-bytes :%sqlite3)
  (export '%sqlite3::blob-close :%sqlite3)
  (export '%sqlite3::blob-open :%sqlite3)
  (export '%sqlite3::blob-read :%sqlite3)
  (export '%sqlite3::blob-reopen :%sqlite3)
  (export '%sqlite3::blob-write :%sqlite3)
  (export '%sqlite3::busy-handler :%sqlite3)
  (export '%sqlite3::busy-timeout :%sqlite3)
  (export '%sqlite3::cancel-auto-extension :%sqlite3)
  (export '%sqlite3::changes :%sqlite3)
  (export '%sqlite3::changes64 :%sqlite3)
  (export '%sqlite3::clear-bindings :%sqlite3)
  (export '%sqlite3::close :%sqlite3)
  (export '%sqlite3::close-v2 :%sqlite3)
  (export '%sqlite3::collation-needed :%sqlite3)
  (export '%sqlite3::collation-needed16 :%sqlite3)
  (export '%sqlite3::column-blob :%sqlite3)
  (export '%sqlite3::column-bytes :%sqlite3)
  (export '%sqlite3::column-bytes16 :%sqlite3)
  (export '%sqlite3::column-count :%sqlite3)
  (export '%sqlite3::column-database-name :%sqlite3)
  (export '%sqlite3::column-database-name16 :%sqlite3)
  (export '%sqlite3::column-decltype :%sqlite3)
  (export '%sqlite3::column-decltype16 :%sqlite3)
  (export '%sqlite3::column-double :%sqlite3)
  (export '%sqlite3::column-int :%sqlite3)
  (export '%sqlite3::column-int64 :%sqlite3)
  (export '%sqlite3::column-name :%sqlite3)
  (export '%sqlite3::column-name16 :%sqlite3)
  (export '%sqlite3::column-origin-name :%sqlite3)
  (export '%sqlite3::column-origin-name16 :%sqlite3)
  (export '%sqlite3::column-table-name :%sqlite3)
  (export '%sqlite3::column-table-name16 :%sqlite3)
  (export '%sqlite3::column-text16 :%sqlite3)
  (export '%sqlite3::column-type :%sqlite3)
  (export '%sqlite3::column-value :%sqlite3)
  (export '%sqlite3::commit-hook :%sqlite3)
  (export '%sqlite3::compileoption-get :%sqlite3)
  (export '%sqlite3::compileoption-used :%sqlite3)
  (export '%sqlite3::complete :%sqlite3)
  (export '%sqlite3::complete16 :%sqlite3)
  (export '%sqlite3::config :%sqlite3)
  (export '%sqlite3::context-db-handle :%sqlite3)
  (export '%sqlite3::create-collation :%sqlite3)
  (export '%sqlite3::create-collation16 :%sqlite3)
  (export '%sqlite3::create-collation-v2 :%sqlite3)
  (export '%sqlite3::create-filename :%sqlite3)
  (export '%sqlite3::create-function :%sqlite3)
  (export '%sqlite3::create-function16 :%sqlite3)
  (export '%sqlite3::create-function-v2 :%sqlite3)
  (export '%sqlite3::i-version :%sqlite3)
  (export '%sqlite3::x-create :%sqlite3)
  (export '%sqlite3::x-connect :%sqlite3)
  (export '%sqlite3::x-best-index :%sqlite3)
  (export '%sqlite3::x-disconnect :%sqlite3)
  (export '%sqlite3::x-destroy :%sqlite3)
  (export '%sqlite3::x-open :%sqlite3)
  (export '%sqlite3::x-close :%sqlite3)
  (export '%sqlite3::x-filter :%sqlite3)
  (export '%sqlite3::x-next :%sqlite3)
  (export '%sqlite3::x-eof :%sqlite3)
  (export '%sqlite3::x-column :%sqlite3)
  (export '%sqlite3::x-rowid :%sqlite3)
  (export '%sqlite3::x-update :%sqlite3)
  (export '%sqlite3::x-begin :%sqlite3)
  (export '%sqlite3::x-sync :%sqlite3)
  (export '%sqlite3::x-commit :%sqlite3)
  (export '%sqlite3::x-rollback :%sqlite3)
  (export '%sqlite3::x-find-function :%sqlite3)
  (export '%sqlite3::x-rename :%sqlite3)
  (export '%sqlite3::x-savepoint :%sqlite3)
  (export '%sqlite3::x-release :%sqlite3)
  (export '%sqlite3::x-rollback-to :%sqlite3)
  (export '%sqlite3::x-shadow-name :%sqlite3)
  (export '%sqlite3::module :%sqlite3)
  (export '%sqlite3::create-module :%sqlite3)
  (export '%sqlite3::create-module-v2 :%sqlite3)
  (export '%sqlite3::create-window-function :%sqlite3)
  (export '%sqlite3::data-count :%sqlite3)
  (export '%sqlite3::x-read :%sqlite3)
  (export '%sqlite3::x-write :%sqlite3)
  (export '%sqlite3::x-truncate :%sqlite3)
  (export '%sqlite3::x-file-size :%sqlite3)
  (export '%sqlite3::x-lock :%sqlite3)
  (export '%sqlite3::x-unlock :%sqlite3)
  (export '%sqlite3::x-check-reserved-lock :%sqlite3)
  (export '%sqlite3::x-file-control :%sqlite3)
  (export '%sqlite3::x-sector-size :%sqlite3)
  (export '%sqlite3::x-device-characteristics :%sqlite3)
  (export '%sqlite3::x-shm-map :%sqlite3)
  (export '%sqlite3::x-shm-lock :%sqlite3)
  (export '%sqlite3::x-shm-barrier :%sqlite3)
  (export '%sqlite3::x-shm-unmap :%sqlite3)
  (export '%sqlite3::x-fetch :%sqlite3)
  (export '%sqlite3::x-unfetch :%sqlite3)
  (export '%sqlite3::io-methods :%sqlite3)
  (export '%sqlite3::p-methods :%sqlite3)
  (export '%sqlite3::file :%sqlite3)
  (export '%sqlite3::database-file-object :%sqlite3)
  (export '%sqlite3::db-cacheflush :%sqlite3)
  (export '%sqlite3::db-config :%sqlite3)
  (export '%sqlite3::db-filename :%sqlite3)
  (export '%sqlite3::db-handle :%sqlite3)
  (export '%sqlite3::mutex :%sqlite3)
  (export '%sqlite3::db-mutex :%sqlite3)
  (export '%sqlite3::db-readonly :%sqlite3)
  (export '%sqlite3::db-release-memory :%sqlite3)
  (export '%sqlite3::db-status :%sqlite3)
  (export '%sqlite3::declare-vtab :%sqlite3)
  (export '%sqlite3::deserialize :%sqlite3)
  (export '%sqlite3::drop-modules :%sqlite3)
  (export '%sqlite3::enable-load-extension :%sqlite3)
  (export '%sqlite3::enable-shared-cache :%sqlite3)
  (export '%sqlite3::errcode :%sqlite3)
  (export '%sqlite3::errmsg :%sqlite3)
  (export '%sqlite3::errmsg16 :%sqlite3)
  (export '%sqlite3::error-offset :%sqlite3)
  (export '%sqlite3::errstr :%sqlite3)
  (export '%sqlite3::exec :%sqlite3)
  (export '%sqlite3::expanded-sql :%sqlite3)
  (export '%sqlite3::expired :%sqlite3)
  (export '%sqlite3::extended-errcode :%sqlite3)
  (export '%sqlite3::extended-result-codes :%sqlite3)
  (export '%sqlite3::file-control :%sqlite3)
  (export '%sqlite3::filename-database :%sqlite3)
  (export '%sqlite3::filename-journal :%sqlite3)
  (export '%sqlite3::filename-wal :%sqlite3)
  (export '%sqlite3::finalize :%sqlite3)
  (export '%sqlite3::free :%sqlite3)
  (export '%sqlite3::free-filename :%sqlite3)
  (export '%sqlite3::free-table :%sqlite3)
  (export '%sqlite3::get-autocommit :%sqlite3)
  (export '%sqlite3::get-auxdata :%sqlite3)
  (export '%sqlite3::get-table :%sqlite3)
  (export '%sqlite3::global-recover :%sqlite3)
  (export '%sqlite3::hard-heap-limit64 :%sqlite3)
  (export '%sqlite3::initialize :%sqlite3)
  (export '%sqlite3::interrupt :%sqlite3)
  (export '%sqlite3::keyword-check :%sqlite3)
  (export '%sqlite3::keyword-count :%sqlite3)
  (export '%sqlite3::keyword-name :%sqlite3)
  (export '%sqlite3::last-insert-rowid :%sqlite3)
  (export '%sqlite3::libversion :%sqlite3)
  (export '%sqlite3::libversion-number :%sqlite3)
  (export '%sqlite3::limit :%sqlite3)
  (export '%sqlite3::load-extension :%sqlite3)
  (export '%sqlite3::log :%sqlite3)
  (export '%sqlite3::malloc :%sqlite3)
  (export '%sqlite3::malloc64 :%sqlite3)
  (export '%sqlite3::memory-alarm :%sqlite3)
  (export '%sqlite3::memory-highwater :%sqlite3)
  (export '%sqlite3::memory-used :%sqlite3)
  (export '%sqlite3::mprintf :%sqlite3)
  (export '%sqlite3::msize :%sqlite3)
  (export '%sqlite3::mutex-alloc :%sqlite3)
  (export '%sqlite3::mutex-enter :%sqlite3)
  (export '%sqlite3::mutex-free :%sqlite3)
  (export '%sqlite3::mutex-held :%sqlite3)
  (export '%sqlite3::mutex-leave :%sqlite3)
  (export '%sqlite3::mutex-notheld :%sqlite3)
  (export '%sqlite3::mutex-try :%sqlite3)
  (export '%sqlite3::next-stmt :%sqlite3)
  (export '%sqlite3::open :%sqlite3)
  (export '%sqlite3::open16 :%sqlite3)
  (export '%sqlite3::open-v2 :%sqlite3)
  (export '%sqlite3::os-end :%sqlite3)
  (export '%sqlite3::os-init :%sqlite3)
  (export '%sqlite3::overload-function :%sqlite3)
  (export '%sqlite3::prepare :%sqlite3)
  (export '%sqlite3::prepare16 :%sqlite3)
  (export '%sqlite3::prepare16-v2 :%sqlite3)
  (export '%sqlite3::prepare16-v3 :%sqlite3)
  (export '%sqlite3::prepare-v2 :%sqlite3)
  (export '%sqlite3::prepare-v3 :%sqlite3)
  (export '%sqlite3::profile :%sqlite3)
  (export '%sqlite3::progress-handler :%sqlite3)
  (export '%sqlite3::randomness :%sqlite3)
  (export '%sqlite3::realloc :%sqlite3)
  (export '%sqlite3::realloc64 :%sqlite3)
  (export '%sqlite3::release-memory :%sqlite3)
  (export '%sqlite3::reset :%sqlite3)
  (export '%sqlite3::reset-auto-extension :%sqlite3)
  (export '%sqlite3::result-blob :%sqlite3)
  (export '%sqlite3::result-blob64 :%sqlite3)
  (export '%sqlite3::result-double :%sqlite3)
  (export '%sqlite3::result-error :%sqlite3)
  (export '%sqlite3::result-error16 :%sqlite3)
  (export '%sqlite3::result-error-code :%sqlite3)
  (export '%sqlite3::result-error-nomem :%sqlite3)
  (export '%sqlite3::result-error-toobig :%sqlite3)
  (export '%sqlite3::result-int :%sqlite3)
  (export '%sqlite3::result-int64 :%sqlite3)
  (export '%sqlite3::result-null :%sqlite3)
  (export '%sqlite3::result-pointer :%sqlite3)
  (export '%sqlite3::result-subtype :%sqlite3)
  (export '%sqlite3::result-text :%sqlite3)
  (export '%sqlite3::result-text16 :%sqlite3)
  (export '%sqlite3::result-text16be :%sqlite3)
  (export '%sqlite3::result-text16le :%sqlite3)
  (export '%sqlite3::result-text64 :%sqlite3)
  (export '%sqlite3::result-value :%sqlite3)
  (export '%sqlite3::result-zeroblob :%sqlite3)
  (export '%sqlite3::result-zeroblob64 :%sqlite3)
  (export '%sqlite3::rollback-hook :%sqlite3)
  (export '%sqlite3::rtree-geometry-callback :%sqlite3)
  (export '%sqlite3::rtree-query-callback :%sqlite3)
  (export '%sqlite3::serialize :%sqlite3)
  (export '%sqlite3::set-authorizer :%sqlite3)
  (export '%sqlite3::set-auxdata :%sqlite3)
  (export '%sqlite3::set-last-insert-rowid :%sqlite3)
  (export '%sqlite3::shutdown :%sqlite3)
  (export '%sqlite3::sleep :%sqlite3)
  (export '%sqlite3::hidden :%sqlite3)
  (export '%sqlite3::snapshot :%sqlite3)
  (export '%sqlite3::snapshot-cmp :%sqlite3)
  (export '%sqlite3::snapshot-free :%sqlite3)
  (export '%sqlite3::snapshot-get :%sqlite3)
  (export '%sqlite3::snapshot-open :%sqlite3)
  (export '%sqlite3::snapshot-recover :%sqlite3)
  (export '%sqlite3::snprintf :%sqlite3)
  (export '%sqlite3::soft-heap-limit :%sqlite3)
  (export '%sqlite3::soft-heap-limit64 :%sqlite3)
  (export '%sqlite3::sourceid :%sqlite3)
  (export '%sqlite3::sql :%sqlite3)
  (export '%sqlite3::status :%sqlite3)
  (export '%sqlite3::status64 :%sqlite3)
  (export '%sqlite3::step :%sqlite3)
  (export '%sqlite3::stmt-busy :%sqlite3)
  (export '%sqlite3::stmt-isexplain :%sqlite3)
  (export '%sqlite3::stmt-readonly :%sqlite3)
  (export '%sqlite3::stmt-scanstatus :%sqlite3)
  (export '%sqlite3::stmt-scanstatus-reset :%sqlite3)
  (export '%sqlite3::stmt-status :%sqlite3)
  (export '%sqlite3::str :%sqlite3)
  (export '%sqlite3::str-append :%sqlite3)
  (export '%sqlite3::str-appendall :%sqlite3)
  (export '%sqlite3::str-appendchar :%sqlite3)
  (export '%sqlite3::str-appendf :%sqlite3)
  (export '%sqlite3::str-errcode :%sqlite3)
  (export '%sqlite3::str-finish :%sqlite3)
  (export '%sqlite3::str-length :%sqlite3)
  (export '%sqlite3::str-new :%sqlite3)
  (export '%sqlite3::str-reset :%sqlite3)
  (export '%sqlite3::str-value :%sqlite3)
  (export '%sqlite3::str-vappendf :%sqlite3)
  (export '%sqlite3::strglob :%sqlite3)
  (export '%sqlite3::stricmp :%sqlite3)
  (export '%sqlite3::strlike :%sqlite3)
  (export '%sqlite3::strnicmp :%sqlite3)
  (export '%sqlite3::system-errno :%sqlite3)
  (export '%sqlite3::table-column-metadata :%sqlite3)
  (export '%sqlite3::test-control :%sqlite3)
  (export '%sqlite3::thread-cleanup :%sqlite3)
  (export '%sqlite3::threadsafe :%sqlite3)
  (export '%sqlite3::total-changes :%sqlite3)
  (export '%sqlite3::total-changes64 :%sqlite3)
  (export '%sqlite3::trace :%sqlite3)
  (export '%sqlite3::trace-v2 :%sqlite3)
  (export '%sqlite3::transfer-bindings :%sqlite3)
  (export '%sqlite3::txn-state :%sqlite3)
  (export '%sqlite3::unlock-notify :%sqlite3)
  (export '%sqlite3::update-hook :%sqlite3)
  (export '%sqlite3::uri-boolean :%sqlite3)
  (export '%sqlite3::uri-int64 :%sqlite3)
  (export '%sqlite3::uri-key :%sqlite3)
  (export '%sqlite3::uri-parameter :%sqlite3)
  (export '%sqlite3::user-data :%sqlite3)
  (export '%sqlite3::value-blob :%sqlite3)
  (export '%sqlite3::value-bytes :%sqlite3)
  (export '%sqlite3::value-bytes16 :%sqlite3)
  (export '%sqlite3::value-double :%sqlite3)
  (export '%sqlite3::value-dup :%sqlite3)
  (export '%sqlite3::value-free :%sqlite3)
  (export '%sqlite3::value-frombind :%sqlite3)
  (export '%sqlite3::value-int :%sqlite3)
  (export '%sqlite3::value-int64 :%sqlite3)
  (export '%sqlite3::value-nochange :%sqlite3)
  (export '%sqlite3::value-numeric-type :%sqlite3)
  (export '%sqlite3::value-pointer :%sqlite3)
  (export '%sqlite3::value-subtype :%sqlite3)
  (export '%sqlite3::value-text :%sqlite3)
  (export '%sqlite3::value-text16 :%sqlite3)
  (export '%sqlite3::value-text16be :%sqlite3)
  (export '%sqlite3::value-text16le :%sqlite3)
  (export '%sqlite3::value-type :%sqlite3)
  (export '%sqlite3::vfs :%sqlite3)
  (export '%sqlite3::sz-os-file :%sqlite3)
  (export '%sqlite3::mx-pathname :%sqlite3)
  (export '%sqlite3::p-next :%sqlite3)
  (export '%sqlite3::z-name :%sqlite3)
  (export '%sqlite3::p-app-data :%sqlite3)
  (export '%sqlite3::x-delete :%sqlite3)
  (export '%sqlite3::x-access :%sqlite3)
  (export '%sqlite3::x-full-pathname :%sqlite3)
  (export '%sqlite3::x-dl-open :%sqlite3)
  (export '%sqlite3::x-dl-error :%sqlite3)
  (export '%sqlite3::x-dl-sym :%sqlite3)
  (export '%sqlite3::x-dl-close :%sqlite3)
  (export '%sqlite3::x-randomness :%sqlite3)
  (export '%sqlite3::x-sleep :%sqlite3)
  (export '%sqlite3::x-current-time :%sqlite3)
  (export '%sqlite3::x-get-last-error :%sqlite3)
  (export '%sqlite3::x-current-time-int64 :%sqlite3)
  (export '%sqlite3::x-set-system-call :%sqlite3)
  (export '%sqlite3::x-get-system-call :%sqlite3)
  (export '%sqlite3::x-next-system-call :%sqlite3)
  (export '%sqlite3::vfs-find :%sqlite3)
  (export '%sqlite3::vfs-register :%sqlite3)
  (export '%sqlite3::vfs-unregister :%sqlite3)
  (export '%sqlite3::vmprintf :%sqlite3)
  (export '%sqlite3::vsnprintf :%sqlite3)
  (export '%sqlite3::i-column :%sqlite3)
  (export '%sqlite3::op :%sqlite3)
  (export '%sqlite3::usable :%sqlite3)
  (export '%sqlite3::i-term-offset :%sqlite3)
  (export '%sqlite3::index-constraint :%sqlite3)
  (export '%sqlite3::desc :%sqlite3)
  (export '%sqlite3::index-orderby :%sqlite3)
  (export '%sqlite3::argv-index :%sqlite3)
  (export '%sqlite3::omit :%sqlite3)
  (export '%sqlite3::index-constraint-usage :%sqlite3)
  (export '%sqlite3::n-constraint :%sqlite3)
  (export '%sqlite3::a-constraint :%sqlite3)
  (export '%sqlite3::n-order-by :%sqlite3)
  (export '%sqlite3::a-order-by :%sqlite3)
  (export '%sqlite3::a-constraint-usage :%sqlite3)
  (export '%sqlite3::idx-num :%sqlite3)
  (export '%sqlite3::idx-str :%sqlite3)
  (export '%sqlite3::need-to-free-idx-str :%sqlite3)
  (export '%sqlite3::order-by-consumed :%sqlite3)
  (export '%sqlite3::estimated-cost :%sqlite3)
  (export '%sqlite3::estimated-rows :%sqlite3)
  (export '%sqlite3::idx-flags :%sqlite3)
  (export '%sqlite3::col-used :%sqlite3)
  (export '%sqlite3::index-info :%sqlite3)
  (export '%sqlite3::vtab-collation :%sqlite3)
  (export '%sqlite3::vtab-config :%sqlite3)
  (export '%sqlite3::vtab-distinct :%sqlite3)
  (export '%sqlite3::vtab-in :%sqlite3)
  (export '%sqlite3::vtab-in-first :%sqlite3)
  (export '%sqlite3::vtab-in-next :%sqlite3)
  (export '%sqlite3::vtab-nochange :%sqlite3)
  (export '%sqlite3::vtab-on-conflict :%sqlite3)
  (export '%sqlite3::vtab-rhs-value :%sqlite3)
  (export '%sqlite3::wal-autocheckpoint :%sqlite3)
  (export '%sqlite3::wal-checkpoint :%sqlite3)
  (export '%sqlite3::wal-checkpoint-v2 :%sqlite3)
  (export '%sqlite3::wal-hook :%sqlite3)
  (export '%sqlite3::win32-set-directory :%sqlite3)
  (export '%sqlite3::win32-set-directory16 :%sqlite3)
  (export '%sqlite3::win32-set-directory8 :%sqlite3)
  (export '%sqlite3::gp-offset :%sqlite3)
  (export '%sqlite3::fp-offset :%sqlite3)
  (export '%sqlite3::overflow-arg-area :%sqlite3)
  (export '%sqlite3::reg-save-area :%sqlite3)
  (export '%sqlite3::%%va-list-tag :%sqlite3)
  (export '%sqlite3::api-routines :%sqlite3)
  (export '%sqlite3::x-malloc :%sqlite3)
  (export '%sqlite3::x-free :%sqlite3)
  (export '%sqlite3::x-realloc :%sqlite3)
  (export '%sqlite3::x-size :%sqlite3)
  (export '%sqlite3::x-roundup :%sqlite3)
  (export '%sqlite3::x-init :%sqlite3)
  (export '%sqlite3::x-shutdown :%sqlite3)
  (export '%sqlite3::mem-methods :%sqlite3)
  (export '%sqlite3::x-mutex-init :%sqlite3)
  (export '%sqlite3::x-mutex-end :%sqlite3)
  (export '%sqlite3::x-mutex-alloc :%sqlite3)
  (export '%sqlite3::x-mutex-free :%sqlite3)
  (export '%sqlite3::x-mutex-enter :%sqlite3)
  (export '%sqlite3::x-mutex-try :%sqlite3)
  (export '%sqlite3::x-mutex-leave :%sqlite3)
  (export '%sqlite3::x-mutex-held :%sqlite3)
  (export '%sqlite3::x-mutex-notheld :%sqlite3)
  (export '%sqlite3::mutex-methods :%sqlite3)
  (export '%sqlite3::pcache :%sqlite3)
  (export '%sqlite3::p-arg :%sqlite3)
  (export '%sqlite3::x-cachesize :%sqlite3)
  (export '%sqlite3::x-pagecount :%sqlite3)
  (export '%sqlite3::x-unpin :%sqlite3)
  (export '%sqlite3::x-rekey :%sqlite3)
  (export '%sqlite3::pcache-methods :%sqlite3)
  (export '%sqlite3::x-shrink :%sqlite3)
  (export '%sqlite3::pcache-methods2 :%sqlite3)
  (export '%sqlite3::p-buf :%sqlite3)
  (export '%sqlite3::p-extra :%sqlite3)
  (export '%sqlite3::pcache-page :%sqlite3)
  (export '%sqlite3::rtree-dbl :%sqlite3)
  (export '%sqlite3::p-context :%sqlite3)
  (export '%sqlite3::n-param :%sqlite3)
  (export '%sqlite3::a-param :%sqlite3)
  (export '%sqlite3::p-user :%sqlite3)
  (export '%sqlite3::x-del-user :%sqlite3)
  (export '%sqlite3::rtree-geometry :%sqlite3)
  (export '%sqlite3::a-coord :%sqlite3)
  (export '%sqlite3::an-queue :%sqlite3)
  (export '%sqlite3::n-coord :%sqlite3)
  (export '%sqlite3::i-level :%sqlite3)
  (export '%sqlite3::mx-level :%sqlite3)
  (export '%sqlite3::i-rowid :%sqlite3)
  (export '%sqlite3::r-parent-score :%sqlite3)
  (export '%sqlite3::e-parent-within :%sqlite3)
  (export '%sqlite3::e-within :%sqlite3)
  (export '%sqlite3::r-score :%sqlite3)
  (export '%sqlite3::ap-sql-param :%sqlite3)
  (export '%sqlite3::rtree-query-info :%sqlite3)
  (export '%sqlite3::p-module :%sqlite3)
  (export '%sqlite3::n-ref :%sqlite3)
  (export '%sqlite3::z-err-msg :%sqlite3)
  (export '%sqlite3::vtab :%sqlite3)
  (export '%sqlite3::p-vtab :%sqlite3)
  (export '%sqlite3::vtab-cursor :%sqlite3)
  (export '%sqlite3::*data-directory* :%sqlite3)
  (export '%sqlite3::*temp-directory* :%sqlite3)
  (export '%sqlite3::*version* :%sqlite3)
  (export '%sqlite3::callback :%sqlite3)
  (export '%sqlite3::destructor-type :%sqlite3)
  (export '%sqlite3::syscall-ptr :%sqlite3))

